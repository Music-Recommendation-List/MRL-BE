{"version":3,"sources":["logo.svg","elements/Grid.js","elements/Image.js","elements/Text.js","elements/Input.js","elements/Button.js","elements/DropDown2.js","elements/Upload.js","common/axios.js","redux/modules/post.js","redux/modules/comment.js","redux/modules/user.js","redux/configureStore.js","components/PostDetail/Post.js","components/PostDetail/CommentWrite.js","components/PostDetail/CommentItem.js","components/PostDetail/CommentList.js","pages/PostDetail.js","pages/PostEdit.js","pages/PostAdd.js","components/Card.js","components/Mainpost/Mainmenu.js","components/Mainpost/Mainpost.js","pages/PostList.js","MRL.png","pages/LogIn.js","pages/SignUp.js","mini_mrl.png","components/Header.js","shared/App.js","reportWebVitals.js","index.js"],"names":["Grid","props","overflow","start_flex","column_flex","end_flex","is_flex","flex","position","padding","margin","bg","children","center","_onClick","maxWidth","radius","border","borderBottom","minWidth","shadow","minHeight","top","left","right","width","height","maxHeight","wrap","styles","review_flex","Fragment","GridBox","onClick","defaultProps","styled","div","Image","shape","src","size","ImageCircle","AspectOutter","AspectInner","MainInner","ImageDefault","Text","bold","color","is_main","cursor","P","p","Input","placeholder","_onChange","type","multiLine","value","is_submit","onSubmit","ElTextarea","rows","onChange","ElInput","onKeyPress","e","key","textarea","input","Button","ElButton","button_name","button","DropDown2","label","list1","list2","list3","list4","list5","help","FormControl","sx","m","InputLabel","id","Select","labelId","MenuItem","FormHelperText","instance","axios","create","interceptors","request","use","config","headers","SET_POST","ADD_POST","setPost","createAction","post_list","addPost","post","handleActions","state","action","produce","draft","list","payload","push","singer","songName","desc","url","category1","category2","category3","musicGenre","feeling","season","actionCreators","data","dispatch","getState","history","token","localStorage","getItem","authorization","then","res","result","alert","message","catch","error","console","response","categoryData","log","err","put","delete","ADD_COMMENT","comment","LOG_OUT","GET_USER","SET_USER","logOut","user","getUser","setUser","setItem","is_login","removeItem","signupDB","pwd","pwd_check","userId","password","passwordConfirm","ok","loginDB","getUserDB","createBrowserHistory","rootReducer","combineReducers","User","Post","Comment","router","connectRouter","middlewares","thunk","withExtraArgument","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","useDispatch","_post","postId","split","frameborder","allowfullscreen","href","target","postActions","CommentWrite","CommentItem","user_id","contents","post_id","React","useState","thisState","setThisState","handleClick","str","submitUpdate","submitDelete","renderSwitch","CommentList","PostDetail","useParams","useSelector","find","PostEdit","setSinger","setSongName","setDesc","setUrl","setCategory1","setCategory2","setCategory3","userActions","PostAdd","goBack","Card","SelectAutoWidth","Box","event","autoWidth","variant","style","fontWeight","backgroundColor","Mainpost","date","likeUser","PostList","useEffect","map","idx","img","LogIn","setId","setPwd","useHistory","MRL","Signup","setPwdCheck","Header","is_token","mini_mrl","App","path","exact","component","SignUp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c28dfa6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Grid = (props) => {\r\n  const {\r\n    overflow,\r\n    start_flex,\r\n    column_flex,\r\n    end_flex,\r\n    is_flex,\r\n    flex,\r\n    position,\r\n    padding,\r\n    margin,\r\n    bg,\r\n    children,\r\n    center,\r\n    _onClick,\r\n    maxWidth,\r\n    radius,\r\n    border,\r\n    borderBottom,\r\n    minWidth,\r\n    shadow,\r\n    minHeight,\r\n    top,\r\n    left,\r\n    right,\r\n    width,\r\n    height,\r\n    maxHeight,\r\n    wrap,\r\n    review_flex,\r\n  } = props;\r\n\r\n  const styles = {\r\n    overflow:overflow,\r\n    start_flex:start_flex,\r\n    column_flex: column_flex,\r\n    end_flex: end_flex,\r\n    is_flex: is_flex,\r\n    flex: flex,\r\n    review_flex: review_flex,\r\n    position: position,\r\n    padding: padding,\r\n    margin: margin,\r\n    bg: bg,\r\n    center: center,\r\n    maxWidth: maxWidth,\r\n    radius: radius,\r\n    borderBottom: borderBottom,\r\n    minWidth: minWidth,\r\n    shadow: shadow,\r\n    minHeight: minHeight,\r\n    top: top,\r\n    left: left,\r\n    right: right,\r\n    width: width,\r\n    height: height,\r\n    maxHeight: maxHeight,\r\n    wrap: wrap,\r\n    border: border,\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* styles를 GridBox의 props로 넘겨주고 있는것 */}\r\n      <GridBox {...styles} onClick={_onClick}>\r\n        {children}\r\n      </GridBox>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nGrid.defaultProps = {\r\n  children: null,\r\n  overflow:\"\",\r\n  start_flex:false,\r\n  column_flex: false,\r\n  end_flex: false,\r\n  is_flex: false,\r\n  review_flex: false,\r\n  flex: false,\r\n  position: false,\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  padding: false,\r\n  margin: false,\r\n  bg: false,\r\n  center: false,\r\n  maxWidth: false,\r\n  radius: \"\",\r\n  borderBottom: false,\r\n  minWidth: false,\r\n  minHeight: false,\r\n  shadow: false,\r\n  _onClick: () => {},\r\n  top: false,\r\n  left: false,\r\n  right: false,\r\n  maxHeight: false,\r\n  wrap: \"\",\r\n  border: \"\",\r\n};\r\n\r\nconst GridBox = styled.div`\r\n  ${(props) => (props.width ? `width: ${props.width};` : \"\")};\r\n  ${(props) => (props.height ? `height: ${props.height};` : \"\")};\r\n  box-sizing: border-box;\r\n  ${(props) => (props.maxWidth ? `max-width: ${props.maxWidth};` : \"\")}\r\n  ${(props) => (props.minWidth ? `min-width: ${props.minWidth};` : \"\")}\r\n  ${(props) => (props.minHeight ? `min-height: ${props.minHeight};` : \"\")}\r\n  ${(props) => (props.padding ? `padding: ${props.padding};` : \"\")}\r\n  ${(props) => (props.margin ? `margin: ${props.margin};` : \"\")}\r\n  ${(props) => (props.bg ? `background-color: ${props.bg};` : \"\")}\r\n  ${(props) => (props.center ? `text-align: ${props.center};` : \"\")}\r\n\r\n  ${(props) =>\r\n    props.borderBottom ? `border-bottom: ${props.borderBottom};` : \"\"}\r\n  ${(props) => (props.radius ? `border-radius: 0.5rem;` : \"\")}\r\n  ${(props) =>\r\n    props.shadow ? `box-shadow: 0.3rem 0.3rem 0.3rem #dcdde1;` : \"\"}\r\n  ${(props) =>\r\n    props.is_flex\r\n      ? `display: flex; align-items: center; justify-content: space-between;`\r\n      : \"\"}\r\n  ${(props) => (props.position ? `position: ${props.position};` : \"\")}\r\n  ${(props) => (props.top ? `top: ${props.top};` : \"\")}\r\n  ${(props) => (props.left ? `left: ${props.left};` : \"\")}\r\n  ${(props) => (props.right ? `right: ${props.right};` : \"\")}\r\n  ${(props) => (props.maxHeight ? `max-height: ${props.maxHeight};` : \"\")}\r\n  ${(props) => (props.flex ? `display: flex;` : \"\")}\r\n  ${(props) => (props.wrap ? `flex-wrap: wrap;` : \"\")}\r\n  ${(props) =>\r\n    props.border ? `border-radius: 0.4rem; border: 1px solid #718093;` : \"\"}\r\n    ${(props) =>\r\n    props.start_flex ? `display: flex; justify-content:flex-start;` : \"\"}\r\n        ${(props) =>\r\n    props.end_flex ? `display: flex; justify-content:flex-end;` : \"\"}\r\n      ${(props) =>\r\n    props.column_flex ? `display: flex; flex-direction:column;` : \"\"}\r\n    ${(props)=> (props.overflow ? `overflow:hidden;`: \"\")}\r\n\r\n@media (min-width: 501px) {\r\n    ${(props) =>\r\n      props.review_flex\r\n        ? `display: flex; align-items: center; justify-content: space-between;`\r\n        : \"\"}\r\n  }\r\n`;\r\n\r\nexport default Grid;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\n\r\nconst Image = (props) => {\r\n  const { shape, src, size, children, radius } = props;\r\n  const styles = {\r\n    src: src,\r\n    size: size,\r\n    radius: radius,\r\n  };\r\n\r\n  if (shape === \"circle\") {\r\n    return <ImageCircle {...styles}></ImageCircle>;\r\n  }\r\n\r\n  if (shape === \"rectangle\") {\r\n    return (\r\n      <AspectOutter>\r\n        <AspectInner {...styles}></AspectInner>\r\n      </AspectOutter>\r\n    );\r\n  }\r\n\r\n  if (shape === \"main\") {\r\n    return <MainInner {...styles}>{children}</MainInner>;\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <ImageDefault {...styles}></ImageDefault>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nImage.defaultProps = {\r\n  shape: \"circle\",\r\n  src: \"https://newsimg.sedaily.com/2017/05/17/1OFYJ2OVJT_1.jpg\",\r\n  size: 3.6,\r\n  radius: \"\",\r\n};\r\n\r\nconst ImageDefault = styled.div`\r\n  --size: ${(props) => props.size}rem;\r\n  width: var(--size);\r\n  height: var(--size);\r\n  background-image: url(\"${(props) => props.src}\");\r\n  background-position: center;\r\n  background-size: cover;\r\n  border-radius:${(props) => props.radius}\r\n`;\r\n\r\nconst AspectOutter = styled.div`\r\n  width: 100%;\r\n  min-width: 25rem;\r\n`;\r\n\r\nconst AspectInner = styled.div`\r\n  position: relative;\r\n  padding-top: 75%;\r\n\r\n  overflow: hidden;\r\n  background-image: url(\"${(props) => props.src}\");\r\n  background-position: center;\r\n  background-size: cover;\r\n  ${(props) => (props.radius ? `border-radius: 0.5rem;` : \"\")}\r\n`;\r\n\r\nconst ImageCircle = styled.div`\r\n  --size: ${(props) => props.size}rem;\r\n  width: var(--size);\r\n  height: var(--size);\r\n  border-radius: var(--size);\r\n\r\n  background-image: url(\"${(props) => props.src}\");\r\n  background-size: cover;\r\n  margin: 0.4rem;\r\n`;\r\n\r\nconst MainBackground = styled.div`\r\n  width: 100%;\r\n  min-width: 25rem;\r\n`;\r\n\r\nconst MainInner = styled.div`\r\n  width: 100%;\r\n  min-width: 25rem;\r\n  position: relative;\r\n  padding-top: 45%;\r\n  /* overflow: hidden; */\r\n  background-image: url(\"${(props) => props.src}\");\r\n  /* background-position: center; */\r\n  background-size: cover;\r\n`;\r\n\r\nexport default Image;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Text = (props) => {\r\n  const { bold, color, size, children, margin, width, is_main, padding, _onClick, cursor , center,right} = props;\r\n  \r\n  const styles = {bold: bold, color: color, size: size, margin, width, is_main, \r\n    padding: padding, _onClick: _onClick, cursor, center:center, right:right};\r\n  \r\n  return (\r\n      <P {...styles} onClick={_onClick}>\r\n          {children}\r\n      </P>\r\n  )\r\n};\r\n\r\nText.defaultProps = {\r\n  children: null,\r\n  right:false,\r\n  center:false,\r\n  bold: false,\r\n  color: \"#222831\",\r\n  size: \"1.4rem\",\r\n  margin: false,\r\n  width: \"\",\r\n  is_main: false,\r\n  padding: false,\r\n  _onClick: () => {},\r\n  cursor: \"\",\r\n};\r\n\r\nconst P = styled.p`\r\n  color: ${(props) => props.color};\r\n  font-size: ${(props) => props.size};\r\n  font-weight: ${(props) => (props.bold? \"600\" : \"400\")};\r\n  ${(props) => (props.margin? `margin: ${props.margin};` : '')}\r\n  ${(props) => (props.padding? `padding: ${props.padding};` : '')}\r\n  ${(props) => (props.width? `width: ${props.width};` : '')}\r\n  ${(props) => (props.is_main? `font-size: 1.6rem; font-weight: 500; text-align: center;` : \"\")}\r\n  ${(props) => (props.cursor? `cursor: pointer;`: '')};\r\n  ${(props) => (props.center? `text-align: center; height: 60px; line-height:60px `: \"\")}\r\n  ${(props) => (props.right? `text-align: right; `: \"\")}\r\n`;\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Text, Grid } from \"./index\";\r\n\r\nconst Input = (props) => {\r\n  const {\r\n    \r\n    placeholder,\r\n    _onChange,\r\n    type,\r\n    multiLine,\r\n    value,\r\n    is_submit,\r\n    onSubmit,\r\n  } = props;\r\n\r\n  if (multiLine) {\r\n    return (\r\n      <Grid>\r\n        <ElTextarea\r\n          rows={7}\r\n          value={value}\r\n          placeholder={placeholder}\r\n          onChange={_onChange}\r\n        ></ElTextarea>\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid>\r\n        {is_submit ? (\r\n          <ElInput\r\n            type={type}\r\n            placeholder={placeholder}\r\n            onChange={_onChange}\r\n            value={value}\r\n            onKeyPress={(e) => {\r\n              if(e.key === \"Enter\"){\r\n                onSubmit(e);\r\n              }\r\n            }}\r\n          />\r\n        ) : (\r\n          <ElInput value={value} type={type} placeholder={placeholder} onChange={_onChange} />\r\n        )}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nInput.defaultProps = {\r\n  multiLine: false,\r\n  placeholder: \"텍스트를 입력해주세요.\",\r\n  type: \"text\",\r\n  value: \"\",\r\n  is_submit: false,\r\n  onSubmit: () => {},\r\n  _onChange: () => {},\r\n};\r\n\r\nconst ElTextarea = styled.textarea`\r\n  border: 0.1rem solid #718093;\r\n  border-radius: 0.4rem;\r\n  width: 100%;\r\n  padding: 1.2rem 0.4rem;\r\n  box-sizing: border-box;\r\n  resize: none;\r\n  font-size: 1.4rem;\r\n`;\r\n\r\nconst ElInput = styled.input`\r\n  border: 0.1rem solid #718093;\r\n  border-radius: 0.4rem;\r\n  width: 100%;\r\n  padding: 1.2rem 0.4rem;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = (props) => {\r\n  const { _onClick, children, margin, width, height, padding, bg, color, radius, shadow, size, cursor, } = props;\r\n\r\n  const styles = {\r\n\r\n    margin: margin,\r\n    width: width,\r\n    height: height,\r\n    padding: padding,\r\n    bg: bg,\r\n    color: color,\r\n    radius: radius,\r\n    shadow: shadow,\r\n    size: size,\r\n    cursor: cursor,\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ElButton {...styles} onClick={_onClick}>{children}</ElButton>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  button_name:false,\r\n  children: null,\r\n  _onClick: () => {},\r\n  margin: false,\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  size: \"\",\r\n  padding: false,\r\n  bg: false,\r\n  color: \"\",\r\n  radius: \"\",\r\n  shadow: false,\r\n  cursor: \"\",\r\n};\r\n\r\nconst ElButton = styled.button`\r\n  width: ${(props) => props.width};\r\n  height: ${(props) => props.height};\r\n  ${(props) => (props.size? `font-size: ${props.size}` : \"\")}\r\n  ${(props) => (props.bg ? `background-color: ${props.bg};` : \"\")}\r\n  ${(props) => (props.color ? `color: ${props.color};` : \"\")}\r\n  box-sizing: border-box;\r\n  border: none;\r\n  ${(props) => (props.radius? `border-radius: ${props.radius};` : \"\")}\r\n  ${(props) => (props.padding ? `padding: ${props.padding};` : \"\")}\r\n  ${(props) => (props.margin ? `margin: ${props.margin};` : \"\")}\r\n  ${(props) => (props.shadow ? `box-shadow: 0.5rem 0.5rem 0.5rem #dcdde1;` : \"\")}\r\n  ${(props) => (props.cursor? `cursor: pointer;`: '')};\r\n\r\n`;\r\n\r\n\r\nexport default Button;\r\n","import * as React from \"react\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormHelperText from \"@mui/material/FormHelperText\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\n\r\nexport default function DropDown2(props) {\r\n  const { _onChange, value, label, list1, list2, list3, list4,list5, help } = props;\r\n\r\n\r\n  return (\r\n    <div>\r\n      <FormControl sx={{ m: 1, minWidth: 120 }}>\r\n        <InputLabel id=\"demo-simple-select-helper-label\">{label}</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-helper-label\"\r\n          id=\"demo-simple-select-helper\"\r\n          value={value}\r\n          label={label}\r\n          onChange={_onChange}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={list1}>{list1}</MenuItem>\r\n          <MenuItem value={list2}>{list2}</MenuItem>\r\n          <MenuItem value={list3}>{list3}</MenuItem>\r\n          <MenuItem value={list4}>{list4}</MenuItem>\r\n          <MenuItem value={list5}>{list5}</MenuItem>\r\n        </Select>\r\n        <FormHelperText>{help}</FormHelperText>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst Upload = (props) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <input type=\"file\"/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Upload;","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create();\r\n\r\ninstance.interceptors.request.use((config) => {\r\n  config.headers['Content-Type'] = 'application/json; charset=utf-8';\r\n  config.headers['X-Requested-With'] = 'XMLHttpRequest';\r\n  config.headers['Accept'] = '*/*';\r\n  return config;\r\n});\r\n\r\nexport default instance;","import { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\nimport instance from \"../../common/axios\";\r\nimport axios from \"axios\";\r\n\r\n//액션타입\r\nconst SET_POST = \"SET_POST\";\r\nconst ADD_POST = \"ADD_POST\";\r\nconst DELETE_POST = \"DELETE_POST\"\r\n// const EDIT_POST_DETAIL = \"EDIT_POST_DETAIL\";\r\n\r\n//액션생성함수\r\nconst setPost = createAction(SET_POST, (post_list) => ({ post_list }));\r\nconst addPost = createAction(ADD_POST, (post) => ({ post })); // addPost()에 넣을떄 뒤에 형태로 넣어야함\r\nconst deletePost = createAction(DELETE_POST, (id) => ({id}))\r\n// const EditPostDetail = createAction(EDIT_POST_DETAIL, (id,data) => ({ id,data }));\r\n\r\n//초기값\r\nconst initialState = {\r\n  list: [\r\n    {\r\n      singer: \"김범수\",\r\n      songName: \"보고싶다\",\r\n      desc: \"매우좋음\",\r\n      url: \"wwww.naver.com\",\r\n      category1: \"발라드\",\r\n      category2: \"그리울때\",\r\n      category3: \"가을\",\r\n    },\r\n    {\r\n      id: \"1\",\r\n      singer: \"닥터스트레인지\",\r\n      songName: \"스트레인지\",\r\n      desc: \"좋음\",\r\n      url: \"wwww.daum.com\",\r\n      musicGenre: \"팝\",\r\n      feeling: \"기쁠때\",\r\n      season: \"여름\",\r\n    },\r\n  ],\r\n};\r\n\r\n\r\n//전체 포스트 가져오기\r\nconst getPostsDB = (categoryData) => {\r\n  return function (dispatch, getState, { history }) {\r\n    const headers = {\r\n      // 'Content-Type': 'multipart/form-data',\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    };\r\n    console.log(\"함수 진입\");\r\n    console.log(categoryData)\r\n    axios\r\n      .post(\"http://3.34.44.44/api/posts\", categoryData, { headers: headers })\r\n      .then((res) => {\r\n        console.log(\"axios 연결\", res);\r\n        console.log(\"데이터의 정확한 값\", res.data.result);\r\n        dispatch(setPost(res.data.result));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\n// 포스트 추가하기\r\nconst addPostDB = (data) => {\r\n  return function (dispatch, getState, { history }) {\r\n    const token = localStorage.getItem('token')\r\n    const headers = {\r\n      //  'Content-Type': 'multipart/form-data',\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\", \r\n      authorization : `Bearer ${token}`\r\n    };\r\n\r\n    // console.log(\"진입\", data);\r\n    axios\r\n      .post(\"http://3.34.44.44/api/posts/write\", data, { headers: headers })\r\n      //requset랑\r\n      .then((res) => {\r\n        // console.log(res.data.result);\r\n        dispatch(addPost(res.data.result));\r\n        alert(res.data.message);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.response.data.message);\r\n      });\r\n  };\r\n};\r\n\r\n\r\n// 포스트 디테일 수정하기\r\nconst editPostDetailDB = (id,data) => {\r\n  return function (dispatch, getState, { history }) {\r\n    const token = localStorage.getItem('token')\r\n    const headers = {\r\n      //  'Content-Type': 'multipart/form-data',\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      authorization : `Bearer ${token}`\r\n    };\r\n    axios\r\n      .put(`http://3.34.44.44/api/posts/detail/${id}/edit`, data, { headers: headers }) \r\n      .then((res) => {\r\n          alert(res.data.message)\r\n          history.push('/')\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\n//삭제하기\r\nconst deletePostlDB = (id) => {\r\n  return function (dispatch, getState, { history }) {\r\n    const token = localStorage.getItem('token')\r\n    const headers = {\r\n      //  'Content-Type': 'multipart/form-data',\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      authorization : `Bearer ${token}`\r\n    };\r\n    axios     \r\n      .delete(`http://3.34.44.44/api/posts/detail/${id}/edit`, {headers: headers }) \r\n      .then((res) => {\r\n          alert(res.data.message)\r\n          history.push('/')\r\n      })\r\n      .catch((err) => {\r\n            //오류시 err.response.data로 고정되어있는 것\r\n        console.log(err.response.data.message);\r\n      });\r\n  };\r\n};\r\n\r\n\r\n//리듀서\r\nexport default handleActions(\r\n  {\r\n    [SET_POST]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.list = action.payload.post_list;\r\n      }),\r\n\r\n    [ADD_POST]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        draft.list.push(action.payload.post);\r\n      }),\r\n\r\n\r\n  },\r\n  initialState\r\n);\r\n\r\n//export\r\nconst actionCreators = {\r\n  setPost,\r\n  addPost,\r\n\r\n\r\n  addPostDB,\r\n  getPostsDB,\r\n  editPostDetailDB,\r\n  deletePostlDB,\r\n\r\n};\r\n\r\nexport { actionCreators };\r\n","import { createAction, handleActions } from \"redux-actions\";\r\nimport { produce } from \"immer\";\r\nimport instance from \"../../common/axios\";\r\nimport axios from \"axios\";\r\n\r\n//액션타입\r\nconst ADD_COMMENT = \"ADD_COMMENT\";\r\n\r\nconst addComment = createAction(ADD_COMMENT, (comment) => ({ comment }));\r\n\r\n\r\nconst initialState = {\r\n  \"postId\": \"asd1nRas\",\r\n  \"contents\": \"노래 너무 좋아요!\",\r\n  \"userId\": \"미들웨어에서 받아온id\",\r\n}\r\n\r\nexport default handleActions({\r\n  [ADD_COMMENT]: (state, action) => produce(state, (draft) => {\r\n    draft = action.payload;\r\n  }),\r\n}, initialState)\r\n\r\nconst actionCreators = {\r\n  addComment\r\n}","//action과 reduser를 편하게 만들어 주는 것\r\nimport { createAction, handleActions } from \"redux-actions\";\r\n//불변성작업을 위한 immer\r\nimport { produce } from \"immer\";\r\n//axios\r\nimport axios from \"axios\";\r\n// import { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\r\n// Actions\r\nconst LOG_OUT = \"LOG_OUT\";\r\nconst GET_USER = \"GET_USER\";\r\nconst SET_USER = \"SET_USER\";\r\n// Action Creators\r\nconst logOut = createAction(LOG_OUT, (user) => ({ user }));\r\nconst getUser = createAction(GET_USER, (user) => ({ user }));\r\nconst setUser = createAction(SET_USER, (user) => ({ user }));\r\n// initialState\r\nconst initialState = {\r\n  user: null,\r\n  is_login: false,\r\n};\r\n//middleware\r\nconst getUserDB = () => {\r\n  return function (dispatch, getState, { history }) {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    };\r\n    dispatch(getUser());\r\n    // axios\r\n    //   .get(\"http://3.34.44.44/api/users/logIn\", { headers: headers })\r\n    //   .then((res) => {\r\n    //     // console.log(res, \"res확인\");\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     console.log(error, \"에러확인\");\r\n    //   });\r\n  };\r\n};\r\nconst loginDB = (id, pwd) => {\r\n  return function (dispatch, getState, { history }) {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    };\r\n    axios\r\n      .post(\r\n        \"http://3.34.44.44/api/users/logIn\",\r\n        {\r\n          userId: id,\r\n          password: pwd,\r\n        },\r\n        { headers: headers }\r\n      )\r\n      .then((res) => {\r\n        // console.log(res, \"res확인\");\r\n        if (res.data.ok === true) {\r\n          dispatch(\r\n            setUser({\r\n              userId: res.data.result.userId,\r\n              token: res.data.result.token,\r\n            })\r\n          );\r\n          alert(res.data.message);\r\n          history.push(\"/\");\r\n        } else {\r\n          alert(res.data.message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error, \"에러확인\");\r\n      });\r\n  };\r\n};\r\nconst signupDB = (id, pwd, pwd_check) => {\r\n  return function (dispatch, getState, { history }) {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    };\r\n    axios\r\n      .post(\r\n        \"http://3.34.44.44/api/users/signUp\",\r\n        {\r\n          userId: id,\r\n          password: pwd,\r\n          passwordConfirm: pwd_check,\r\n        },\r\n        { headers: headers }\r\n      )\r\n      .then((res) => {\r\n        // console.log(res, \"회원가입res확인\");\r\n        if (res.data.ok === true) {\r\n          alert(res.data.message);\r\n          history.push(\"/\");\r\n        } else {\r\n          alert(res.data.message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response, \"에러에러\");\r\n        if (error.response.data.ok === false) {\r\n          alert(error.response.data.message);\r\n        }\r\n      });\r\n  };\r\n};\r\n//reducer\r\nexport default handleActions(\r\n  {\r\n    //어떤 action에 대한 것인지 작성\r\n    //login&signup페이지 둘다에서 리덕스에 유저정보를 저장해야하기때문에 setuser로 이름을 통합하여 붙임\r\n    [SET_USER]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(\"쿠키\", action.payload.user.token);\r\n        console.log(\"확인용!\", action.payload);\r\n        localStorage.setItem(\"token\", action.payload.user.token);\r\n        draft.user = action.payload.user; //createAction을 쓰면 중간에 payload를 써주어야 값을 가져온다.\r\n        draft.is_login = true;\r\n      }),\r\n    [LOG_OUT]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        localStorage.removeItem(\"token\");\r\n        draft.user = null;\r\n        draft.is_login = false;\r\n      }),\r\n    [GET_USER]: (state, action) =>\r\n      produce(state, (draft) => {\r\n        // console.log(localStorage.getItem(\"token\"), \"이게 토큰확인\");\r\n        if (localStorage.getItem(\"token\")) {\r\n          console.log(\"토큰있음\");\r\n          draft.is_login = true;\r\n        } else {\r\n          console.log(\"토큰없음\");\r\n          draft.is_login = false;\r\n        }\r\n      }),\r\n  },\r\n  initialState\r\n);\r\n/*\r\n여기서 produce는 불변성작업을 위한 immer를 쓰는 것이다.\r\nproduce를 쓰면 원본값이 뭔지 알아야 하기때문에 처음 state를 쓰고 그 다음\r\n원본값을 가지고 어떤 작업을 하고 싶은지 함수로 쓰면 된다.\r\nproduce(state, (draft는 immer가 원본값을 복사해서 주는 값이다.) => {어떤 작업을 해야하는지})\r\n*/\r\n//action creator export\r\nconst actionCreators = {\r\n  logOut,\r\n  getUser,\r\n  setUser,\r\n  signupDB,\r\n  loginDB,\r\n  getUserDB,\r\n};\r\nexport { actionCreators };\r\n\r\n\r\n\r\n\r\n\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { connectRouter } from \"connected-react-router\";\r\n\r\n\r\nimport Post from \"./modules/post\";\r\nimport Comment from \"./modules/comment\";\r\nimport User from \"./modules/user\";\r\n\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst rootReducer = combineReducers({\r\n  user: User,\r\n  post: Post,\r\n  comment: Comment,\r\n  router: connectRouter(history),\r\n});\r\n\r\n// 미들웨어 \r\nconst middlewares = [thunk.withExtraArgument({ history: history })];\r\n\r\n// 지금이 어느 환경인 지 알려줘요. (개발환경, 프로덕션(배포)환경 ...)\r\nconst env = process.env.NODE_ENV;\r\n\r\n// 개발환경에서는 로거라는 걸 하나만 더 써볼게요.\r\nif (env === \"development\") {\r\n  const { logger } = require(\"redux-logger\");\r\n  middlewares.push(logger);\r\n}\r\n\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    })\r\n    : compose;\r\n\r\n//미들웨어 묶기\r\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\r\n\r\n// 스토어만들기\r\nlet store = (initialStore) => createStore(rootReducer, enhancer);\r\n\r\n\r\nexport default store();\r\n\r\n\r\n","import React from \"react\";\r\nimport { Text, Input, Image, Grid, Button, Upload } from \"../../elements\";\r\nimport { history } from \"../../redux/configureStore\";\r\nimport { actionCreators as postActions } from \"../../redux/modules/post\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Post = (props) => {\r\n  const dispatch = useDispatch();\r\n  console.log(\"오류냐?\", props);\r\n  const {\r\n    category1,\r\n    category2,\r\n    category3,\r\n    desc,\r\n    singer,\r\n    url,\r\n    userId,\r\n    songName,\r\n    postId,\r\n  } = props._post;\r\n\r\n  const delete_post = () => {\r\n    dispatch(postActions.deletePostlDB(postId));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid width=\"50vw\" margin=\"50px auto 20px\">\r\n        <Text margin=\"20px 0px\" size=\"36px\" bold center>\r\n          상세페이지\r\n        </Text>\r\n\r\n        <Grid is_flex>\r\n          <Grid>\r\n            <iframe\r\n              width=\"100%\"\r\n              height=\"360px\" \r\n              src={`https://www.youtube.com/embed/${\r\n                props._post.url.split(\"=\")[1]\r\n              }`}\r\n              frameborder=\"0\"\r\n              allowfullscreen\r\n            ></iframe>\r\n          </Grid>\r\n          <Grid\r\n            height=\"350px\"\r\n            border\r\n            margin=\"0px 0px 0px 20px\"\r\n            padding=\"10px 15px\"\r\n            overflow\r\n          >\r\n            <Text margin=\"0 0 15px 0px\" size=\"16px\" bold right>\r\n              작성자 : {userId}{\" \"}\r\n            </Text>\r\n            <Text margin=\"10px 0 20px 0px\" bold>\r\n              가수이름 : {singer}{\" \"}\r\n            </Text>\r\n            <Text margin=\"10px 0 20px 0px\" bold>\r\n              곡 이름: {songName}{\" \"}\r\n            </Text>\r\n            <Text margin=\"0 0 20px 0px\" bold>\r\n              곡 설명 : {desc}{\" \"}\r\n            </Text>\r\n            <Text margin=\"0 0 20px 0px\" bold>\r\n              {\" \"}\r\n              유튜브 링크 : {\" \"}\r\n              <a href={url} target=\"_blank\">\r\n                {url}{\" \"}\r\n              </a>\r\n            </Text>\r\n            <Text margin=\"0 0 20px 0px\" bold>\r\n              #{category1} #{category2} #{category3}\r\n            </Text>\r\n            <Text margin=\"0 0 20px 0px\"></Text>\r\n            <Text margin=\"0 0 20px 0px\"></Text>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid end_flex margin=\"10px 0px 0px 0px\">\r\n          <Button\r\n            width=\"auto\"\r\n            padding=\"20px\"\r\n            margin=\"10px 30px 0px 0px\"\r\n            _onClick={() => {\r\n              history.push(\"/detail/\" + postId + \"/edit\");\r\n            }}\r\n          >\r\n            수정\r\n          </Button>\r\n          <Button\r\n            width=\"auto\"\r\n            padding=\"20px\"\r\n            margin=\"10px 30px 0px 0px\"\r\n            _onClick={() => {\r\n              delete_post();\r\n            }}\r\n          >\r\n            삭제\r\n          </Button>\r\n          <Button width=\"auto\" padding=\"20px\" margin=\"10px 30px 0px 0px\">\r\n            취소\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n// Post.defaultProps = {\r\n\r\n//   singer: \"외국인\",\r\n//   musicName: \"보고싶다\",\r\n//   desc: \"missing you\",\r\n//   lnik: \"www.abc.com423432432423432432432432423\",\r\n//   musicGenre: \"발라드\",\r\n//   feeling: \"우울\",\r\n//   season: \"가을\",\r\n//   user_name: \"GCEE\",\r\n//   id: 0,\r\n\r\n// };\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\n\r\nimport { Text, Input, Image, Grid, Button, Upload } from \"../../elements\";\r\n\r\nconst CommentWrite = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Grid width=\"50vw\" margin=\"0px auto\">\r\n\r\n        <Text size=\"16px\" margin=\"10px 0px\">\r\n          댓글 (총 0개)\r\n        </Text>\r\n        <Grid is_flex>\r\n          <Input placeholder=\"댓글 내용을 입력해주세요 :)\" />\r\n          <Button width=\"65px\" padding=\"18px\" margin=\"0px 0px 0px 15px\">\r\n            작성\r\n          </Button>\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CommentWrite;\r\n","import React from \"react\";\r\nimport { Text, Input, Image, Grid, Button, Upload } from \"../../elements\";\r\n\r\nconst CommentItem = (props) => {\r\n  const { user_id, post_id, contents } = props;\r\n\r\n  const [thisState, setThisState] = React.useState('ready');\r\n\r\n  const handleClick = (str, e) => {\r\n    setThisState(str)\r\n  }\r\n\r\n  const submitUpdate = () => {\r\n    console.log('update');\r\n  }\r\n\r\n  const submitDelete = () => {\r\n    console.log('delete');\r\n  }\r\n\r\n  const renderSwitch = (state) => {\r\n    switch (state) {\r\n      default:\r\n      case 'ready':\r\n        return (\r\n          <Grid column_flex width=\"auto\" margin=\"0px 0px 0px 15px\">\r\n            <Button width=\"65px\" padding=\"8px\" _onClick={(e) => handleClick('update', e)}>\r\n              수정\r\n            </Button>\r\n            <Button width=\"65px\" padding=\"8px\" _onClick={(e) => handleClick('delete', e)}>\r\n              삭제\r\n            </Button>\r\n          </Grid>\r\n        )\r\n      case 'update':\r\n        return (\r\n          <Grid column_flex width=\"auto\" margin=\"0px 0px 0px 15px\">\r\n            <Button width=\"65px\" padding=\"8px\" _onClick={submitUpdate}>\r\n              수정 확인\r\n            </Button>\r\n            <Button width=\"65px\" padding=\"8px\" _onClick={(e) => handleClick('ready', e)}>\r\n              수정 취소\r\n            </Button>\r\n          </Grid>\r\n        )\r\n      case 'delete':\r\n        return (\r\n          <Grid column_flex width=\"auto\" margin=\"0px 0px 0px 15px\">\r\n            <Button width=\"65px\" padding=\"8px\" _onClick={submitDelete}>\r\n              삭제 확인\r\n            </Button>\r\n            <Button width=\"65px\" padding=\"8px\" _onClick={(e) => handleClick('ready', e)}>\r\n              삭제 취소\r\n            </Button>\r\n          </Grid>\r\n        )\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1>{thisState}</h1>\r\n      <Grid is_flex margin=\"0px 0px 10px 0px\">\r\n        <Grid width=\"auto\" margin=\"0px 8px 0px 0px\">\r\n          <Text bold>{user_id}</Text>\r\n        </Grid>\r\n        <Grid border>\r\n          <Text>{contents}</Text>\r\n        </Grid>\r\n        {renderSwitch(thisState)}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nCommentItem.defaultProps = {\r\n  user_id: \"abcd\",\r\n  post_id: 1,\r\n  contents: \"안녕하세요옹!\",\r\n};\r\n\r\n\r\nexport default CommentItem;","import React from \"react\";\r\nimport { Text, Input, Image, Grid, Button, Upload } from \"../../elements\";\r\nimport CommentItem from \"./CommentItem\";\r\n\r\nconst CommentList = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Grid width=\"50vw\" margin=\"20px auto\">\r\n        <Grid>\r\n          <CommentItem />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Post from \"../components/PostDetail/Post\";\r\nimport CommentWrite from \"../components/PostDetail/CommentWrite\";\r\nimport CommentList from \"../components/PostDetail/CommentList\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { actionCreators as postActions } from \"../redux/modules/post\";\r\nconst PostDetail = (props) => {\r\n  const { id:postId }  = useParams();\r\n  console.log(useParams())\r\n  console.log(postId)\r\n\r\n  const post_list = useSelector((state) => state.post.list);\r\n  console.log(post_list);\r\n\r\n  // id를 이용해서 상세 값 받아오기\r\n  let _post = post_list.find((p) =>  {\r\n    console.log(p.postId);\r\n    console.log(postId);\r\n     return p.postId == postId})\r\n    console.log(_post)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Post _post={_post} />\r\n      <CommentWrite />\r\n      <CommentList />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PostDetail;\r\n","import React from \"react\";\r\nimport { actionCreators as userActions } from \"../redux/modules/post\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { actionCreators as postActions } from \"../redux/modules/post\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { history } from \"../redux/configureStore\";\r\nimport {\r\n  Text,\r\n  Input,\r\n  Image,\r\n  Grid,\r\n  Button,\r\n  Upload,\r\n  DropDown,\r\n  DropDown2,\r\n} from \"../elements\";\r\n\r\n\r\nconst PostEdit = (props) => {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  console.log(id)\r\n  console.log(useParams())\r\n\r\n  const post_list = useSelector((state) => state.post.list);\r\n  console.log(post_list);\r\n  let _post = post_list.find((p)=> p.postId == id) // 상세페이지 데이터\r\n  console.log(_post)\r\n\r\n\r\n  //useState\r\n  const [singer, setSinger] = React.useState(_post ? _post.singer:\"\");\r\n  const [songName, setSongName] = React.useState(_post ? _post.songName:\"\");\r\n  const [desc, setDesc] = React.useState(_post ? _post.desc:\"\");\r\n  const [url, setUrl] = React.useState(_post ? _post.url:\"\");\r\n  const [category1, setCategory1] = React.useState(_post ? _post.category1:\"\");\r\n  const [category2, setCategory2] = React.useState(_post ? _post.category2:\"\");\r\n  const [category3, setCategory3] = React.useState(_post ? _post.category3:\"\");\r\n\r\n\r\n  // change함수\r\n  const changeSinger = (e) => {\r\n    setSinger(e.target.value);\r\n  };\r\n\r\n  const changeSongName = (e) => {\r\n    setSongName(e.target.value);\r\n  };\r\n  const changeDesc = (e) => {\r\n    setDesc(e.target.value);\r\n  };\r\n  const changeUrl = (e) => {\r\n    setUrl(e.target.value);\r\n  };\r\n\r\n  const selectGenre = (e) => {\r\n    setCategory1(e.target.value);\r\n  };\r\n\r\n  const selectFeeling = (e) => {\r\n    setCategory2(e.target.value);\r\n  };\r\n\r\n  const selectSeason = (e) => {\r\n    setCategory3(e.target.value);\r\n  };\r\n \r\n  // 입력받은 값\r\n  const data = {\r\n    singer: singer,\r\n    songName: songName,\r\n    desc: desc,\r\n    url: url,\r\n    category1: category1,\r\n    category2: category2,\r\n    category3: category3,\r\n  };\r\n\r\n  // 리덕스 전송\r\n  const re_save = () => {\r\n    dispatch(userActions.editPostDetailDB(id,data));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid>\r\n        <Grid width=\"30vw\" margin=\"90px auto\" border minWidth=\"600px\">\r\n          <Grid width=\"570px\" padding=\"20px 30px\">\r\n            <Grid margin=\"0px 0px 20px 0px\">\r\n              <Text margin=\"0px\" size=\"36px\" bold center>\r\n                포스트 수정\r\n              </Text>\r\n            </Grid>\r\n\r\n            <Grid is_flex>\r\n              <Text size=\"20px\" width=\"140px\">\r\n                가수이름\r\n              </Text>\r\n              <Input\r\n                value={singer}\r\n                _onChange={changeSinger}\r\n                placeholder=\"가수 이름을 입력해주세요:)\"\r\n              ></Input>\r\n            </Grid>\r\n\r\n            <Grid is_flex>\r\n              <Text size=\"20px\" width=\"140px\">\r\n                곡 이름\r\n              </Text>\r\n              <Input\r\n                value={songName}\r\n                _onChange={changeSongName}\r\n                placeholder=\"곡 이름을 입력해주세요:)\"\r\n              ></Input>\r\n            </Grid>\r\n\r\n            <Grid is_flex>\r\n              <Text size=\"20px\" width=\"140px\">\r\n                곡 설명\r\n              </Text>\r\n              <Input\r\n                value={desc}\r\n                _onChange={changeDesc}\r\n                placeholder=\"곡 설명을 입력해주세요:)\"\r\n              ></Input>\r\n            </Grid>\r\n\r\n            <Grid is_flex>\r\n              <Text size=\"20px\" width=\"140px\">\r\n                유튜브링크\r\n              </Text>\r\n              <Input\r\n                value={url}\r\n                _onChange={changeUrl}\r\n                placeholder=\"유튜브 링크를 입력해주세요:)\"\r\n              ></Input>\r\n            </Grid>\r\n\r\n            <Grid margin=\"20px 0px\">\r\n              <Grid flex>\r\n                <Text center size=\"20px\" width=\"70px\" margin=\"6px 32px 0px 0px\">\r\n                  장르\r\n                </Text>\r\n                <DropDown2\r\n                  _onChange={selectGenre}\r\n                  value={category1}\r\n                  label=\"장르 :)\"\r\n                  help=\"장르를 선택해주세요!\"\r\n                  list1=\"가요\"\r\n                  list2=\"힙합\"\r\n                  list3=\"발라드\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid flex>\r\n                <Text center size=\"20px\" width=\"70px\" margin=\"6px 32px 0px 0px\">\r\n                  감성\r\n                </Text>\r\n                <DropDown2\r\n                  _onChange={selectFeeling}\r\n                  value={category2}\r\n                  label=\"기분 :)\"\r\n                  help=\"어울리는 기분을 선택해주세요!\"\r\n                  list1=\"기쁨\"\r\n                  list2=\"슬픔\"\r\n                  list3=\"우울\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid flex>\r\n                <Text center size=\"20px\" width=\"70px\" margin=\"6px 32px 0px 0px\">\r\n                  계절\r\n                </Text>\r\n\r\n                <DropDown2\r\n                  _onChange={selectSeason}\r\n                  value={category3}\r\n                  label=\"계절 :)\"\r\n                  help=\"어울리는 계절을 선택해주세요!\"\r\n                  list1=\"봄\"\r\n                  list2=\"여름\"\r\n                  list3=\"가을\"\r\n                  list4=\"겨울\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid end_flex margin=\"0px 0px 10px 0px\">\r\n              <Button\r\n                width=\"80px\"\r\n                padding=\"20px\"\r\n                margin=\"10px 0px 0px 30px\"\r\n                _onClick={re_save}\r\n              >\r\n                저장\r\n              </Button>\r\n              <Button \r\n              width=\"80px\" \r\n              padding=\"20px\"\r\n               margin=\"10px 10px 0px 10px\"\r\n               _onClick={()=>{\r\n                 history.push('/')\r\n               }}\r\n               >\r\n                취소\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PostEdit;\r\n","import React from \"react\";\r\nimport { actionCreators as userActions } from \"../redux/modules/post\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { history } from \"../redux/configureStore\";\r\nimport {\r\n  Text,\r\n  Input,\r\n  Image,\r\n  Grid,\r\n  Button,\r\n  Upload,\r\n  DropDown,\r\n  DropDown2,\r\n} from \"../elements\";\r\n\r\nconst PostAdd = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  //useState\r\n  const [singer, setSinger] = React.useState(\"\");\r\n  const [songName, setSongName] = React.useState(\"\");\r\n  const [desc, setDesc] = React.useState(\"\");\r\n  const [url, setUrl] = React.useState(\"\");\r\n  const [category1, setCategory1] = React.useState(\"\");\r\n  const [category2, setCategory2] = React.useState(\"\");\r\n  const [category3, setCategory3] = React.useState(\"\");\r\n\r\n  // change함수\r\n  const changeSinger = (e) => {\r\n    setSinger(e.target.value);\r\n  };\r\n\r\n  const changeSongName = (e) => {\r\n    setSongName(e.target.value);\r\n  };\r\n  const changeDesc = (e) => {\r\n    setDesc(e.target.value);\r\n  };\r\n  const changeUrl = (e) => {\r\n    setUrl(e.target.value);\r\n  };\r\n\r\n  const selectGenre = (e) => {\r\n    setCategory1(e.target.value);\r\n  };\r\n\r\n  const selectFeeling = (e) => {\r\n    setCategory2(e.target.value);\r\n  };\r\n\r\n  const selectSeason = (e) => {\r\n    setCategory3(e.target.value);\r\n  };\r\n\r\n  const data = {\r\n    singer: singer,\r\n    songName: songName,\r\n    desc: desc,\r\n    url: url,\r\n    category1: category1,\r\n    category2: category2,\r\n    category3: category3,\r\n  };\r\n\r\n  // 리덕스 전송\r\n  const save = () => {\r\n    dispatch(userActions.addPostDB(data));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid>\r\n        <Grid width=\"30vw\" margin=\"90px auto\" border minWidth=\"600px\">\r\n          <Grid width=\"570px\" padding=\"20px 30px\">\r\n            <Grid margin=\"0px 0px 20px 0px\">\r\n              <Text margin=\"0px\" size=\"36px\" bold center>\r\n                포스트 생성\r\n              </Text>\r\n            </Grid>\r\n\r\n            <Grid is_flex>\r\n              <Text size=\"20px\" width=\"140px\">\r\n                가수이름\r\n              </Text>\r\n              <Input\r\n                value={singer}\r\n                _onChange={changeSinger}\r\n                placeholder=\"가수 이름을 입력해주세요:)\"\r\n              ></Input>\r\n            </Grid>\r\n\r\n            <Grid is_flex>\r\n              <Text size=\"20px\" width=\"140px\">\r\n                곡 이름\r\n              </Text>\r\n              <Input\r\n                value={songName}\r\n                _onChange={changeSongName}\r\n                placeholder=\"곡 이름을 입력해주세요:)\"\r\n              ></Input>\r\n            </Grid>\r\n\r\n            <Grid is_flex>\r\n              <Text size=\"20px\" width=\"140px\">\r\n                곡 설명\r\n              </Text>\r\n              <Input\r\n                value={desc}\r\n                _onChange={changeDesc}\r\n                placeholder=\"곡 설명을 입력해주세요:)\"\r\n              ></Input>\r\n            </Grid>\r\n\r\n            <Grid is_flex>\r\n              <Text size=\"20px\" width=\"140px\" margin=\"6px 0px\">\r\n                유튜브링크\r\n              </Text>\r\n              <Input\r\n                value={url}\r\n                _onChange={changeUrl}\r\n                placeholder=\"유튜브 링크를 입력해주세요:)\"\r\n              ></Input>\r\n            </Grid>\r\n\r\n            <Grid margin=\"20px 0px\">\r\n              <Grid flex>\r\n                <Text center size=\"20px\" width=\"70px\" margin=\"6px 32px 0px 0px\">\r\n                  장르\r\n                </Text>\r\n                <DropDown2\r\n                  _onChange={selectGenre}\r\n                  value={category1}\r\n                  label=\"장르 :)\"\r\n                  help=\"장르를 선택해주세요!\"\r\n                  list1=\"발라드\"\r\n                  list2=\"댄스\"\r\n                  list3=\"랩/힙합\"\r\n                  list4=\"트로트\"\r\n                  list5=\"인디음악\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid flex>\r\n                <Text center size=\"20px\" width=\"70px\" margin=\"6px 32px 0px 0px\">\r\n                  감성\r\n                </Text>\r\n                <DropDown2\r\n                  _onChange={selectFeeling}\r\n                  value={category2}\r\n                  label=\"기분 :)\"\r\n                  help=\"어울리는 기분을 선택해주세요!\"\r\n                  list1=\"신나는\"\r\n                  list2=\"슬픈/우울한\"\r\n                  list3=\"기분전환\"\r\n                  list4=\"설레는\"\r\n                  list5=\"스트레스 풀 때\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid flex>\r\n                <Text center size=\"20px\" width=\"70px\" margin=\"6px 32px 0px 0px\">\r\n                  계절\r\n                </Text>\r\n\r\n                <DropDown2\r\n                  _onChange={selectSeason}\r\n                  value={category3}\r\n                  label=\"계절 :)\"\r\n                  help=\"어울리는 계절을 선택해주세요!\"\r\n                  list1=\"봄\"\r\n                  list2=\"여름\"\r\n                  list3=\"가을\"\r\n                  list4=\"겨울\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid end_flex margin=\"0px 0px 10px 0px\">\r\n              <Button\r\n                width=\"80px\"\r\n                padding=\"20px\"\r\n                margin=\"10px 0px 0px 30px\"\r\n                _onClick={save}\r\n              >\r\n                저장\r\n              </Button>\r\n              <Button width=\"80px\" padding=\"20px\" margin=\"10px 10px 0px 10px\"\r\n              _onClick={()=>{\r\n                history.goBack('/')\r\n              }}\r\n              >\r\n                취소\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PostAdd;\r\n","import React from \"react\";\r\nimport {\r\n  Text,\r\n  Input,\r\n  Image,\r\n  Grid,\r\n  Button,\r\n  Upload,\r\n  DropDown,\r\n} from \"../elements\";\r\nimport { history } from \"../redux/configureStore\";\r\n\r\nconst Card = (props) => {\r\n  console.log(\"리덕스 초기값\", props);\r\n  const {\r\n    postId,\r\n    singer,\r\n    songName,\r\n    desc,\r\n    url,\r\n    category1,\r\n    category2,\r\n    category3,\r\n  } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid padding=\"20px\" margin=\"10px 40px\" width=\"auto\">\r\n        <Grid\r\n          _onClick={() => {\r\n            history.push(\"/detail/\" + postId);\r\n          }}\r\n          width=\"auto\"\r\n          border=\"1px solid black\"\r\n          padding=\"0px\"\r\n        >\r\n          <Image\r\n            radius=\"0.5rme\"\r\n            shape=\"rectangle\"\r\n            src={\r\n              \"http://img.youtube.com/vi/\" + props.url.split(\"=\")[1] + \"/0.jpg\"\r\n            }\r\n          />\r\n          <Text margin=\"30px 0px 0px 0px\" is_main>\r\n            {\" \"}\r\n            Singer - {singer}\r\n          </Text>\r\n          <Text is_main> title - {songName}</Text>\r\n          <Text size=\"20px\" bold center>\r\n            {category1 ? `#${category1} ` : \"\"}\r\n            {category2 ? `#${category2} ` : \"\"}\r\n            {category3 ? `#${category3} ` : \"\"}\r\n          </Text>\r\n\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import * as React from \"react\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport Button from \"@mui/material/Button\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { actionCreators, actionCreators as postActions } from \"../../redux/modules/post\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function SelectAutoWidth() {\r\n  const dispatch = useDispatch();\r\n\r\n  const pick_category = () => {\r\n    const categoryData = {};\r\n    if (category1 !== \"전체\") {\r\n      categoryData.category1 = category1;\r\n    }\r\n    if (category2 !== \"전체\") {\r\n      categoryData.category2 = category2;\r\n    }\r\n    if (category3 !== \"전체\") {\r\n      categoryData.category3 = category3;\r\n    }\r\n    console.log(categoryData);\r\n\r\n    dispatch(postActions.getPostsDB(categoryData));\r\n  };\r\n\r\n  //use state\r\n  const [category1, setCategory1] = React.useState(\"\");\r\n  const [category2, setCategory2] = React.useState(\"\");\r\n  const [category3, setCategory3] = React.useState(\"\");\r\n\r\n  const handleCategory1 = (event) => {\r\n    setCategory1(event.target.value);\r\n  };\r\n\r\n  const handleCategory2 = (event) => {\r\n    setCategory2(event.target.value);\r\n  };\r\n\r\n  const handleCategory3 = (event) => {\r\n    setCategory3(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <div>\r\n        <FormControl sx={{ m: 1, minWidth: 80 }}>\r\n          <InputLabel id=\"demo-simple-select-autowidth-label\">장르</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-autowidth-label\"\r\n            id=\"demo-simple-select-autowidth\"\r\n            value={category1}\r\n            onChange={handleCategory1}\r\n            autoWidth\r\n            label=\"장르\"\r\n          >\r\n            <MenuItem value=\"전체\">\r\n              <em>전체</em>\r\n            </MenuItem>\r\n            <MenuItem value=\"발라드\">발라드</MenuItem>\r\n            <MenuItem value=\"댄스\">댄스</MenuItem>\r\n            <MenuItem value=\"랩/힙합\">랩/힙합</MenuItem>\r\n            <MenuItem value=\"트로트\">트로트</MenuItem>\r\n            <MenuItem value=\"인디음악\">인디음악</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <div>\r\n        <FormControl sx={{ m: 1, minWidth: 80 }}>\r\n          <InputLabel id=\"demo-simple-select-autowidth-label\">감성</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-autowidth-label\"\r\n            id=\"demo-simple-select-autowidth\"\r\n            value={category2}\r\n            onChange={handleCategory2}\r\n            autoWidth\r\n            label=\"감성\"\r\n          >\r\n            <MenuItem value=\"전체\">\r\n              <em>전체</em>\r\n            </MenuItem>\r\n            <MenuItem value=\"신나는\">신나는</MenuItem>\r\n            <MenuItem value=\"슬픈/우울한\">슬픈/우울한</MenuItem>\r\n            <MenuItem value=\"기분전환\">기분전환</MenuItem>\r\n            <MenuItem value=\"설레는\">설레는</MenuItem>\r\n            <MenuItem value=\"스트레스 풀 때\">스트레스 풀 때</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <div>\r\n        <FormControl sx={{ m: 1, minWidth: 80 }}>\r\n          <InputLabel id=\"demo-simple-select-autowidth-label\">계절</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-autowidth-label\"\r\n            id=\"demo-simple-select-autowidth\"\r\n            value={category3}\r\n            onChange={handleCategory3}\r\n            autoWidth\r\n            label=\"계절\"\r\n          >\r\n            <MenuItem value=\"전체\">\r\n              <em>전체</em>\r\n            </MenuItem>\r\n            <MenuItem value=\"봄\">봄</MenuItem>\r\n            <MenuItem value=\"여름\">여름</MenuItem>\r\n            <MenuItem value=\"가을\">가을</MenuItem>\r\n            <MenuItem value=\"겨울\">겨울</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={pick_category}\r\n        style={{\r\n          color: \"#FFFFFF\",\r\n          fontWeight: \"800\",\r\n          backgroundColor: \"black\",\r\n        }}\r\n      >\r\n        검색\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={()=>{\r\n          dispatch(actionCreators.getPostsDB())\r\n        }}\r\n        style={{\r\n          color: \"#FFFFFF\",\r\n          fontWeight: \"800\",\r\n          backgroundColor: \"black\",\r\n        }}\r\n      >\r\n        초기화\r\n      </Button>\r\n\r\n    </Box>\r\n  );\r\n}\r\nconst Box = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  Button {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import React from 'react';\nimport Grid from '../../elements/Grid';\nimport Image from '../../elements/Image';\nimport Text from '../../elements/Text';\nimport { history } from '../../redux/configureStore';\n\nconst Mainpost = (props) => {\n  console.log(props);\n\n  const {\n    category1,\n    category2,\n    category3,\n    date,\n    desc,\n    likeUser,\n    singer,\n    songName,\n    url,\n    userId,\n  } = props;\n\n  return (\n    <Grid padding=\"16px\" is_flex wrap>\n      <Grid\n        _onClick={() => {\n          history.push('/detail');\n        }}\n        width=\"auto\"\n        border=\"1px solid black\"\n        padding=\"10px\"\n      >\n        <Grid width=\"auto\">\n          <Image shape=\"rectangle\" src={url} />\n\n          <Text size=\"10px\">{songName}</Text>\n          <Text size=\"10px\">{singer}</Text>\n          <Text size=\"10px\">{userId}</Text>\n          <Text size=\"15px\" bold>\n            {category1}\n            {category2}\n            {category3}\n          </Text>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nMainpost.defaultProps = {};\n\nexport default Mainpost;\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Card from \"../components/Card\";\r\nimport { Text, Input, Image, Grid, Button, Upload, DropDown, } from \"../elements\";\r\nimport { useEffect } from \"react\";\r\nimport { history } from \"../redux/configureStore\";\r\nimport { actionCreators as postActions } from '../redux/modules/post';\r\nimport Mainmenu from '../components/Mainpost/Mainmenu';\r\nimport MainPostList from '../components/Mainpost/MainPostList';\r\n\r\nconst PostList = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const post_list = useSelector((state) => state.post.list);\r\n  console.log(post_list);\r\n\r\n  React.useEffect(() => {\r\n    console.log('실행됏나?')\r\n    dispatch(postActions.getPostsDB())\r\n  }, [])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Mainmenu />\r\n\r\n      <Grid flex wrap width=\"auto\" margin=\" 0px 0px 0px 200px \">\r\n        { post_list.map((p, idx) => {\r\n          return <Card key={p.postId} {...p} />;\r\n        })}\r\n      </Grid>\r\n    </React.Fragment>\r\n\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n\r\n","export default __webpack_public_path__ + \"static/media/MRL.befc2519.png\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Text, Input, Grid, Button } from \"../elements\";\r\nimport MRL from \"../MRL.png\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//1. ation 불러다 사용하기\r\nimport { useDispatch } from \"react-redux\";\r\n// 4. 디스패치 안에 넣을 액션생성함수 가져오기\r\nimport { actionCreators as userActions } from \"../redux/modules/user\";\r\n\r\nconst LogIn = (props) => {\r\n  //2. 디스패치 만들기\r\n  const dispatch = useDispatch();\r\n\r\n  const [id, setId] = React.useState(\"\");\r\n  const [pwd, setPwd] = React.useState(\"\");\r\n\r\n  //3. login함수에 디스패치 넣기 dispatch()\r\n  const login = () => {\r\n    if (id === \"\" || pwd === \"\") {\r\n      window.alert(\"아이디 혹은 비밀번호를 입력해주세요!\");\r\n      return;\r\n    }\r\n    //5. 디스패치안에 액션생성함수 넣기\r\n    dispatch(userActions.loginDB(id, pwd));\r\n  };\r\n\r\n  //나중에 리덕스사용시 제거\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid padding=\"16px\" width=\"50%\" margin=\"auto\">\r\n        <Image src={MRL} />\r\n        <Text size=\"25px\" bold margin=\"0\">\r\n          로그인\r\n        </Text>\r\n        <Grid padding=\"10px 0px\">\r\n          <Input\r\n            label=\"아이디\"\r\n            placeholder=\"아이디를 입력해주세요.\"\r\n            value={id}\r\n            _onChange={(e) => {\r\n              setId(e.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid padding=\"10px 0px\">\r\n          <Input\r\n            label=\"패스워드\"\r\n            placeholder=\"패스워드 입력해주세요.\"\r\n            type=\"password\"\r\n            value={pwd}\r\n            _onChange={(e) => {\r\n              setPwd(e.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Button\r\n          bg=\"black\"\r\n          color=\"#FFFFFF\"\r\n          margin=\"5px 0px\"\r\n          height=\"50px\"\r\n          radius=\"0.4rem\"\r\n          _onClick={() => {\r\n            console.log(\"로그인했음\");\r\n            login();\r\n          }}\r\n        >\r\n          로그인\r\n        </Button>\r\n        <Button\r\n          bg=\"black\"\r\n          color=\"#FFFFFF\"\r\n          margin=\"5px 0px\"\r\n          height=\"50px\"\r\n          radius=\"0.4rem\"\r\n          _onClick={() => {\r\n            history.push(\"/signup\");\r\n          }}\r\n        >\r\n          회원가입\r\n        </Button>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst Image = styled.img`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: auto;\r\n  width: 40%;\r\n  height: 40%;\r\n`;\r\n\r\nexport default LogIn;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid, Text, Input, Button } from \"../elements\";\r\nimport MRL from \"../MRL.png\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCreators as userActions } from \"../redux/modules/user\";\r\n\r\nconst Signup = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [id, setId] = React.useState(\"\");\r\n  const [pwd, setPwd] = React.useState(\"\");\r\n  const [pwd_check, setPwdCheck] = React.useState(\"\");\r\n\r\n  const signup = () => {\r\n    dispatch(userActions.signupDB(id, pwd, pwd_check));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid padding=\"16px\" width=\"50%\" margin=\"auto\">\r\n        <Image src={MRL} />\r\n        <Text size=\"25px\" bold margin=\"0\">\r\n          회원가입\r\n        </Text>\r\n\r\n        <Grid padding=\"10px 0px\">\r\n          <Input\r\n            label=\"아이디\"\r\n            placeholder=\"아이디를 입력해주세요.\"\r\n            value={id}\r\n            _onChange={(e) => {\r\n              setId(e.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid padding=\"10px 0px\">\r\n          <Input\r\n            label=\"비밀번호\"\r\n            placeholder=\"비밀번호를 입력해주세요.\"\r\n            type=\"password\"\r\n            value={pwd}\r\n            _onChange={(e) => {\r\n              setPwd(e.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid padding=\"10px 0px\">\r\n          <Input\r\n            label=\"비밀번호 확인\"\r\n            placeholder=\"비밀번호를 다시 입력해주세요.\"\r\n            type=\"password\"\r\n            value={pwd_check}\r\n            _onChange={(e) => {\r\n              setPwdCheck(e.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Button\r\n          bg=\"black\"\r\n          color=\"#FFFFFF\"\r\n          margin=\"5px 0px\"\r\n          height=\"50px\"\r\n          radius=\"0.4rem\"\r\n          _onClick={() => {\r\n            signup();\r\n          }}\r\n        >\r\n          회원가입하기\r\n        </Button>\r\n        <Button\r\n          bg=\"black\"\r\n          color=\"#FFFFFF\"\r\n          margin=\"5px 0px\"\r\n          height=\"50px\"\r\n          radius=\"0.4rem\"\r\n          _onClick={() => { }}\r\n        >\r\n          취소\r\n        </Button>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst Image = styled.img`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: auto;\r\n  width: 40%;\r\n  height: 40%;\r\n`;\r\n\r\nSignup.defaultProps = {};\r\n\r\nexport default Signup;\r\n","export default __webpack_public_path__ + \"static/media/mini_mrl.78346372.png\";","import React from \"react\";\r\nimport { Text, Grid, Button } from \"../elements\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { actionCreators as userActions } from \"../redux/modules/user\";\r\nimport mini_mrl from \"../../src/mini_mrl.png\";\r\nimport styled from \"styled-components\";\r\nimport { history } from \"../redux/configureStore\";\r\nimport { actionCreators } from \"../redux/modules/post\";\r\nconst Header = (props) => {\r\n  const dispatch = useDispatch();\r\n  const is_login = useSelector((state) => state.user.is_login);\r\n  const is_token = window.localStorage.getItem(\"token\") ? true : false;\r\n  if (is_login && is_token) {\r\n    return (\r\n      <>\r\n        <Grid is_flex>\r\n          <Grid is_flex padding=\"4px 25px 4px 0px\">\r\n            <Image\r\n              src={mini_mrl}\r\n              onClick={() => {\r\n                history.push(\"/\");\r\n              }}\r\n            />\r\n            <Grid>\r\n              <Text\r\n                margin=\"0px\"\r\n                size=\"24px\"\r\n                bold\r\n                _onClick={() => {\r\n                  history.push(\"/\");\r\n                }}\r\n              >\r\n                MRL\r\n              </Text>\r\n            </Grid>\r\n            <Grid is_flex width=\"auto\">\r\n              <Button\r\n                width=\"150px\"\r\n                bg=\"black\"\r\n                color=\"#FFFFFF\"\r\n                margin=\"0px 5px\"\r\n                height=\"40px\"\r\n                radius=\"0.4rem\"\r\n                _onClick={() => {\r\n                  history.push(\"/addpost\");\r\n                }}\r\n              >\r\n                작성\r\n              </Button>\r\n\r\n              <Button\r\n                width=\"150px\"\r\n                bg=\"black\"\r\n                color=\"#FFFFFF\"\r\n                margin=\"0px 5px\"\r\n                height=\"40px\"\r\n                radius=\"0.4rem\"\r\n                _onClick={() => {\r\n                  dispatch(userActions.logOut({}));\r\n                  history.push(\"/\");\r\n                }}\r\n              >\r\n                로그아웃\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <hr></hr>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      {history.push(\"/\")}\r\n      <Grid is_flex>\r\n        <Grid is_flex padding=\"4px 25px 4px 0px\">\r\n          <Image\r\n            src={mini_mrl}\r\n            onClick={() => {\r\n              history.push(\"/\");\r\n            }}\r\n          />\r\n          <Grid>\r\n            <Text\r\n              margin=\"0px\"\r\n              size=\"24px\"\r\n              bold\r\n              _onClick={() => {\r\n                history.push(\"/\");\r\n              }}\r\n            >\r\n              MRL\r\n            </Text>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid is_flex width=\"20%\" margin=\"0px 20px 0px 0px\">\r\n          <Button\r\n            bg=\"black\"\r\n            color=\"#FFFFFF\"\r\n            margin=\"0px 5px\"\r\n            height=\"40px\"\r\n            radius=\"0.4rem\"\r\n            _onClick={() => {\r\n              history.push(\"/login\");\r\n            }}\r\n          >\r\n            로그인\r\n          </Button>\r\n          <Button\r\n            bg=\"black\"\r\n            color=\"#FFFFFF\"\r\n            margin=\"0px 5px\"\r\n            height=\"40px\"\r\n            radius=\"0.4rem\"\r\n            _onClick={() => {\r\n              history.push(\"/signup\");\r\n            }}\r\n          >\r\n            회원가입\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <hr></hr>\r\n    </>\r\n  );\r\n};\r\nconst Image = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n`;\r\nexport default Header;\r\n","import logo from \"../logo.svg\";\r\nimport \"./App.css\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport PostDetail from \"../pages/PostDetail\";\r\nimport PostEdit from \"../pages/PostEdit\";\r\nimport PostAdd from \"../pages/PostAdd\";\r\nimport PostList from \"../pages/PostList\";\r\nimport LogIn from \"../pages/LogIn\";\r\nimport SignUp from \"../pages/SignUp\";\r\nimport Header from \"../components/Header\";\r\n// 인덱스에 더 이상 브라우저라우터를 쓰지않고 provider를 써서 store주입 한다. (store에 createBrowsr history선언)\r\n// store에는\r\nimport { ConnectedRouter } from \"connected-react-router\";\r\nimport { history } from \"../redux/configureStore\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { actionCreators as userActions } from \"../redux/modules/user\";\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  dispatch(userActions.getUserDB());\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      <ConnectedRouter history={history}>\r\n        <Route path=\"/login\" exact component={LogIn} />\r\n        <Route path=\"/signup\" exact component={SignUp} />\r\n        <Route path=\"/\" exact component={PostList} />\r\n        <Route path=\"/detail/:id\" exact component={PostDetail} />\r\n        <Route path=\"/detail/:id/edit\" exact component={PostEdit} />\r\n        <Route path=\"/addpost\" exact component={PostAdd} />\r\n      </ConnectedRouter>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./shared/App\";\r\nimport store from \"./redux/configureStore\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}