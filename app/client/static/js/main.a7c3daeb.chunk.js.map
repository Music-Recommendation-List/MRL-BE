{"version":3,"sources":["logo.svg","elements/Grid.js","elements/Image.js","elements/Text.js","elements/Input.js","elements/Button.js","elements/DropDown2.js","elements/Upload.js","common/axios.js","redux/modules/post.js","redux/modules/comment.js","redux/modules/user.js","redux/configureStore.js","components/PostDetail/Post.js","components/PostDetail/CommentWrite.js","components/PostDetail/CommentItem.js","components/PostDetail/CommentList.js","pages/PostDetail.js","pages/PostEdit.js","pages/PostAdd.js","components/Card.js","components/Mainpost/Mainmenu.js","components/Mainpost/Mainpost.js","pages/PostList.js","MRL.png","pages/LogIn.js","pages/SignUp.js","mini_mrl.png","components/Header.js","shared/App.js","reportWebVitals.js","index.js"],"names":["Grid","props","overflow","start_flex","column_flex","end_flex","is_flex","flex","position","padding","margin","bg","children","center","_onClick","maxWidth","radius","border","borderBottom","minWidth","shadow","minHeight","top","left","right","width","height","maxHeight","wrap","styles","review_flex","Fragment","GridBox","onClick","defaultProps","styled","div","Image","shape","src","size","ImageCircle","AspectOutter","AspectInner","MainInner","ImageDefault","Text","bold","color","is_main","cursor","P","p","Input","placeholder","_onChange","type","multiLine","value","is_submit","onSubmit","ElTextarea","rows","onChange","ElInput","onKeyPress","e","key","textarea","input","Button","font","ElButton","button_name","button","DropDown2","label","list1","list2","list3","list4","list5","help","FormControl","sx","m","InputLabel","id","Select","labelId","MenuItem","FormHelperText","instance","axios","create","interceptors","request","use","config","headers","SET_POST","ADD_POST","setPost","createAction","post_list","addPost","post","handleActions","state","action","produce","draft","list","payload","push","singer","songName","desc","url","category1","category2","category3","musicGenre","feeling","season","actionCreators","data","dispatch","getState","history","token","localStorage","getItem","authorization","then","res","result","alert","message","catch","error","console","response","categoryData","log","err","put","delete","ADD_COMMENT","GET_COMMENT","getComment","comment_list","addComment","comment","postId","contents","userId","get","commentId","LOG_OUT","GET_USER","SET_USER","logOut","user","getUser","setUser","setItem","is_login","removeItem","signupDB","pwd","pwd_check","password","passwordConfirm","ok","loginDB","getUserDB","createBrowserHistory","rootReducer","combineReducers","User","Post","Comment","router","connectRouter","middlewares","thunk","withExtraArgument","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","Link","a","useDispatch","_post","border-radius","split","frameborder","allowfullscreen","alink","href","target","display","postActions","CommentWrite","useParams","React","useState","setComment","commentAction","CommentItem","thisState","setThisState","handleClick","str","submitDelete","commentActions","renderSwitch","CommentList","map","idx","PostDetail","useSelector","find","useEffect","PostEdit","setSinger","setSongName","setDesc","setUrl","setCategory1","setCategory2","setCategory3","userActions","PostAdd","goBack","img","Card","SelectAutoWidth","Box","event","autoWidth","variant","style","fontWeight","backgroundColor","fontFamily","Mainpost","date","likeUser","PostList","LogIn","setId","setPwd","useHistory","MRL","Signup","setPwdCheck","Header","is_token","mini_mrl","App","path","exact","component","SignUp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7c3daeb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Grid = (props) => {\n  const {\n    overflow,\n    start_flex,\n    column_flex,\n    end_flex,\n    is_flex,\n    flex,\n    position,\n    padding,\n    margin,\n    bg,\n    children,\n    center,\n    _onClick,\n    maxWidth,\n    radius,\n    border,\n    borderBottom,\n    minWidth,\n    shadow,\n    minHeight,\n    top,\n    left,\n    right,\n    width,\n    height,\n    maxHeight,\n    wrap,\n    review_flex,\n  } = props;\n\n  const styles = {\n    overflow:overflow,\n    start_flex:start_flex,\n    column_flex: column_flex,\n    end_flex: end_flex,\n    is_flex: is_flex,\n    flex: flex,\n    review_flex: review_flex,\n    position: position,\n    padding: padding,\n    margin: margin,\n    bg: bg,\n    center: center,\n    maxWidth: maxWidth,\n    radius: radius,\n    borderBottom: borderBottom,\n    minWidth: minWidth,\n    shadow: shadow,\n    minHeight: minHeight,\n    top: top,\n    left: left,\n    right: right,\n    width: width,\n    height: height,\n    maxHeight: maxHeight,\n    wrap: wrap,\n    border: border,\n  };\n\n  return (\n    <React.Fragment>\n      {/* styles를 GridBox의 props로 넘겨주고 있는것 */}\n      <GridBox {...styles} onClick={_onClick}>\n        {children}\n      </GridBox>\n    </React.Fragment>\n  );\n};\n\nGrid.defaultProps = {\n  children: null,\n  overflow:\"\",\n  start_flex:false,\n  column_flex: false,\n  end_flex: false,\n  is_flex: false,\n  review_flex: false,\n  flex: false,\n  position: false,\n  width: \"100%\",\n  height: \"100%\",\n  padding: false,\n  margin: false,\n  bg: false,\n  center: false,\n  maxWidth: false,\n  radius: \"\",\n  borderBottom: false,\n  minWidth: false,\n  minHeight: false,\n  shadow: false,\n  _onClick: () => {},\n  top: false,\n  left: false,\n  right: false,\n  maxHeight: false,\n  wrap: \"\",\n  border: \"\",\n};\n\nconst GridBox = styled.div`\n  ${(props) => (props.width ? `width: ${props.width};` : \"\")};\n  ${(props) => (props.height ? `height: ${props.height};` : \"\")};\n  box-sizing: border-box;\n  ${(props) => (props.maxWidth ? `max-width: ${props.maxWidth};` : \"\")}\n  ${(props) => (props.minWidth ? `min-width: ${props.minWidth};` : \"\")}\n  ${(props) => (props.minHeight ? `min-height: ${props.minHeight};` : \"\")}\n  ${(props) => (props.padding ? `padding: ${props.padding};` : \"\")}\n  ${(props) => (props.margin ? `margin: ${props.margin};` : \"\")}\n  ${(props) => (props.bg ? `background-color: ${props.bg};` : \"\")}\n  ${(props) => (props.center ? `text-align: ${props.center};` : \"\")}\n\n  ${(props) =>\n    props.borderBottom ? `border-bottom: ${props.borderBottom};` : \"\"}\n  ${(props) => (props.radius ? `border-radius: 0.5rem;` : \"\")}\n  ${(props) =>\n    props.shadow ? `box-shadow: 0.3rem 0.3rem 0.3rem #dcdde1;` : \"\"}\n  ${(props) =>\n    props.is_flex\n      ? `display: flex; align-items: center; justify-content: space-between;`\n      : \"\"}\n  ${(props) => (props.position ? `position: ${props.position};` : \"\")}\n  ${(props) => (props.top ? `top: ${props.top};` : \"\")}\n  ${(props) => (props.left ? `left: ${props.left};` : \"\")}\n  ${(props) => (props.right ? `right: ${props.right};` : \"\")}\n  ${(props) => (props.maxHeight ? `max-height: ${props.maxHeight};` : \"\")}\n  ${(props) => (props.flex ? `display: flex;` : \"\")}\n  ${(props) => (props.wrap ? `flex-wrap: wrap;` : \"\")}\n  ${(props) =>\n    props.border ? `border-radius: 0.4rem; border: 1px solid #718093;` : \"\"}\n    ${(props) =>\n    props.start_flex ? `display: flex; justify-content:flex-start;` : \"\"}\n        ${(props) =>\n    props.end_flex ? `display: flex; justify-content:flex-end;` : \"\"}\n      ${(props) =>\n    props.column_flex ? `display: flex; flex-direction:column;` : \"\"}\n    ${(props)=> (props.overflow ? `overflow:hidden;`: \"\")}\n\n@media (min-width: 501px) {\n    ${(props) =>\n      props.review_flex\n        ? `display: flex; align-items: center; justify-content: space-between;`\n        : \"\"}\n  }\n`;\n\nexport default Grid;\n","import styled from \"styled-components\";\nimport React from \"react\";\n\nconst Image = (props) => {\n  const { shape, src, size, children, radius } = props;\n  const styles = {\n    src: src,\n    size: size,\n    radius: radius,\n  };\n\n  if (shape === \"circle\") {\n    return <ImageCircle {...styles}></ImageCircle>;\n  }\n\n  if (shape === \"rectangle\") {\n    return (\n      <AspectOutter>\n        <AspectInner {...styles}></AspectInner>\n      </AspectOutter>\n    );\n  }\n\n  if (shape === \"main\") {\n    return <MainInner {...styles}>{children}</MainInner>;\n  }\n  return (\n    <React.Fragment>\n      <ImageDefault {...styles}></ImageDefault>\n    </React.Fragment>\n  );\n};\n\nImage.defaultProps = {\n  shape: \"circle\",\n  src: \"https://newsimg.sedaily.com/2017/05/17/1OFYJ2OVJT_1.jpg\",\n  size: 3.6,\n  radius: \"\",\n};\n\nconst ImageDefault = styled.div`\n  --size: ${(props) => props.size}rem;\n  width: var(--size);\n  height: var(--size);\n  background-image: url(\"${(props) => props.src}\");\n  background-position: center;\n  background-size: cover;\n  border-radius:${(props) => props.radius}\n`;\n\nconst AspectOutter = styled.div`\n  width: 100%;\n  min-width: 25rem;\n`;\n\nconst AspectInner = styled.div`\n  position: relative;\n  padding-top: 75%;\n\n  overflow: hidden;\n  background-image: url(\"${(props) => props.src}\");\n  background-position: center;\n  background-size: cover;\n  ${(props) => (props.radius ? `border-radius: 0.5rem;` : \"\")}\n`;\n\nconst ImageCircle = styled.div`\n  --size: ${(props) => props.size}rem;\n  width: var(--size);\n  height: var(--size);\n  border-radius: var(--size);\n\n  background-image: url(\"${(props) => props.src}\");\n  background-size: cover;\n  margin: 0.4rem;\n`;\n\nconst MainBackground = styled.div`\n  width: 100%;\n  min-width: 25rem;\n`;\n\nconst MainInner = styled.div`\n  width: 100%;\n  min-width: 25rem;\n  position: relative;\n  padding-top: 45%;\n  /* overflow: hidden; */\n  background-image: url(\"${(props) => props.src}\");\n  /* background-position: center; */\n  background-size: cover;\n`;\n\nexport default Image;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Text = (props) => {\n  const { bold, color, size, children, margin, width, is_main, padding, _onClick, cursor , center,right} = props;\n  \n  const styles = {bold: bold, color: color, size: size, margin, width, is_main, \n    padding: padding, _onClick: _onClick, cursor, center:center, right:right};\n  \n  return (\n      <P {...styles} onClick={_onClick}>\n          {children}\n      </P>\n  )\n};\n\nText.defaultProps = {\n  children: null,\n  right:false,\n  center:false,\n  bold: false,\n  color: \"#222831\",\n  size: \"1.4rem\",\n  margin: false,\n  width: \"\",\n  is_main: false,\n  padding: false,\n  _onClick: () => {},\n  cursor: \"\",\n};\n\nconst P = styled.p`\n  color: ${(props) => props.color};\n  font-size: ${(props) => props.size};\n  font-weight: ${(props) => (props.bold? \"600\" : \"400\")};\n  ${(props) => (props.margin? `margin: ${props.margin};` : '')}\n  ${(props) => (props.padding? `padding: ${props.padding};` : '')}\n  ${(props) => (props.width? `width: ${props.width};` : '')}\n  ${(props) => (props.is_main? `font-size: 1.6rem; font-weight: 500; text-align: center;` : \"\")}\n  ${(props) => (props.cursor? `cursor: pointer;`: '')};\n  ${(props) => (props.center? `text-align: center; height: 60px; line-height:60px `: \"\")}\n  ${(props) => (props.right? `text-align: right; `: \"\")}\n`;\n\nexport default Text;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { Text, Grid } from \"./index\";\n\nconst Input = (props) => {\n  const {\n    \n    placeholder,\n    _onChange,\n    type,\n    multiLine,\n    value,\n    is_submit,\n    onSubmit,\n  } = props;\n\n  if (multiLine) {\n    return (\n      <Grid>\n        <ElTextarea\n          rows={7}\n          value={value}\n          placeholder={placeholder}\n          onChange={_onChange}\n        ></ElTextarea>\n      </Grid>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Grid>\n        {is_submit ? (\n          <ElInput\n            type={type}\n            placeholder={placeholder}\n            onChange={_onChange}\n            value={value}\n            onKeyPress={(e) => {\n              if(e.key === \"Enter\"){\n                onSubmit(e);\n              }\n            }}\n          />\n        ) : (\n          <ElInput value={value} type={type} placeholder={placeholder} onChange={_onChange} />\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nInput.defaultProps = {\n  multiLine: false,\n  placeholder: \"텍스트를 입력해주세요.\",\n  type: \"text\",\n  value: \"\",\n  is_submit: false,\n  onSubmit: () => {},\n  _onChange: () => {},\n};\n\nconst ElTextarea = styled.textarea`\n  border: 0.1rem solid #718093;\n  border-radius: 0.4rem;\n  width: 100%;\n  padding: 1.2rem 0.4rem;\n  box-sizing: border-box;\n  resize: none;\n  font-size: 1.4rem;\n`;\n\nconst ElInput = styled.input`\n  border: 0.1rem solid #718093;\n  border-radius: 0.4rem;\n  width: 100%;\n  padding: 1.2rem 0.4rem;\n  box-sizing: border-box;\n`;\n\nexport default Input;\n","import React from \"react\";\nimport styled from \"styled-components\";\nconst Button = (props) => {\n  const {\n    _onClick,\n    children,\n    margin,\n    width,\n    height,\n    padding,\n    bg,\n    color,\n    radius,\n    shadow,\n    size,\n    cursor,\n    bold,\n    font,\n  } = props;\n  const styles = {\n    margin: margin,\n    width: width,\n    height: height,\n    padding: padding,\n    bg: bg,\n    color: color,\n    radius: radius,\n    shadow: shadow,\n    size: size,\n    cursor: cursor,\n    bold: bold,\n    font: font,\n  };\n  return (\n    <React.Fragment>\n      <ElButton {...styles} onClick={_onClick}>\n        {children}\n      </ElButton>\n    </React.Fragment>\n  );\n};\nButton.defaultProps = {\n  button_name: false,\n  children: null,\n  _onClick: () => {},\n  margin: false,\n  width: \"100%\",\n  height: \"100%\",\n  size: \"\",\n  padding: false,\n  bg: false,\n  color: \"\",\n  radius: \"\",\n  shadow: false,\n  cursor: \"\",\n  bold: false,\n  font: false,\n};\nconst ElButton = styled.button`\n  width: ${(props) => props.width};\n  height: ${(props) => props.height};\n  font-weight: ${(props) => (props.bold ? \"600\" : \"400\")};\n  ${(props) => (props.size ? `font-size: ${props.size}` : \"\")}\n  ${(props) => (props.bg ? `background-color: ${props.bg};` : \"\")}\n  ${(props) => (props.color ? `color: ${props.color};` : \"\")}\n  box-sizing: border-box;\n  border: none;\n  ${(props) => (props.radius ? `border-radius: ${props.radius};` : \"\")}\n  ${(props) => (props.padding ? `padding: ${props.padding};` : \"\")}\n  ${(props) => (props.margin ? `margin: ${props.margin};` : \"\")}\n  ${(props) =>\n    props.shadow ? `box-shadow: 0.5rem 0.5rem 0.5rem #DCDDE1;` : \"\"}\n  ${(props) => (props.cursor ? `cursor: pointer;` : \"\")};\n  font-family: ${(props) => (props.font ? \"Cafe24SsurroundAir\" : \"\")};\n`;\nexport default Button;","import * as React from \"react\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\n\nexport default function DropDown2(props) {\n  const { _onChange, value, label, list1, list2, list3, list4,list5, help } = props;\n\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel id=\"demo-simple-select-helper-label\">{label}</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-helper-label\"\n          id=\"demo-simple-select-helper\"\n          value={value}\n          label={label}\n          onChange={_onChange}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={list1}>{list1}</MenuItem>\n          <MenuItem value={list2}>{list2}</MenuItem>\n          <MenuItem value={list3}>{list3}</MenuItem>\n          <MenuItem value={list4}>{list4}</MenuItem>\n          <MenuItem value={list5}>{list5}</MenuItem>\n        </Select>\n        <FormHelperText>{help}</FormHelperText>\n      </FormControl>\n    </div>\n  );\n}\n","import React from \"react\";\n\nconst Upload = (props) => {\n\n    return (\n        <React.Fragment>\n            <input type=\"file\"/>\n        </React.Fragment>\n    )\n}\n\nexport default Upload;","import axios from 'axios';\n\n\nconst instance = axios.create();\n\ninstance.interceptors.request.use((config) => {\n  config.headers['Content-Type'] = 'application/json; charset=utf-8';\n  config.headers['X-Requested-With'] = 'XMLHttpRequest';\n  config.headers['Accept'] = '*/*';\n  return config;\n});\n\nexport default instance;","import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport instance from \"../../common/axios\";\nimport axios from \"axios\";\n\n//액션타입\nconst SET_POST = \"SET_POST\";\nconst ADD_POST = \"ADD_POST\";\nconst DELETE_POST = \"DELETE_POST\"\n// const EDIT_POST_DETAIL = \"EDIT_POST_DETAIL\";\n\n//액션생성함수\nconst setPost = createAction(SET_POST, (post_list) => ({ post_list }));\nconst addPost = createAction(ADD_POST, (post) => ({ post })); // addPost()에 넣을떄 뒤에 형태로 넣어야함\nconst deletePost = createAction(DELETE_POST, (id) => ({id}))\n// const EditPostDetail = createAction(EDIT_POST_DETAIL, (id,data) => ({ id,data }));\n\n//초기값\nconst initialState = {\n  list: [\n    {\n      singer: \"김범수\",\n      songName: \"보고싶다\",\n      desc: \"매우좋음\",\n      url: \"wwww.naver.com\",\n      category1: \"발라드\",\n      category2: \"그리울때\",\n      category3: \"가을\",\n    },\n    {\n      id: \"1\",\n      singer: \"닥터스트레인지\",\n      songName: \"스트레인지\",\n      desc: \"좋음\",\n      url: \"wwww.daum.com\",\n      musicGenre: \"팝\",\n      feeling: \"기쁠때\",\n      season: \"여름\",\n    },\n  ],\n};\n\n\n//전체 포스트 가져오기\nconst getPostsDB = (categoryData) => {\n  return function (dispatch, getState, { history }) {\n    const headers = {\n      // 'Content-Type': 'multipart/form-data',\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    };\n    console.log(\"함수 진입\");\n    console.log(categoryData)\n    axios\n      .post(\"http://3.34.44.44/api/posts\", categoryData, { headers: headers })\n      .then((res) => {\n        console.log(\"axios 연결\", res);\n        console.log(\"데이터의 정확한 값\", res.data.result);\n        dispatch(setPost(res.data.result));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\n// 포스트 추가하기\nconst addPostDB = (data) => {\n  return function (dispatch, getState, { history }) {\n    const token = localStorage.getItem('token')\n    const headers = {\n      //  'Content-Type': 'multipart/form-data',\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\", \n      authorization : `Bearer ${token}`\n    };\n\n    // console.log(\"진입\", data);\n    axios\n      .post(\"http://3.34.44.44/api/posts/write\", data, { headers: headers })\n      //requset랑\n      .then((res) => {\n        // console.log(res.data.result);\n        dispatch(addPost(res.data.result));\n        alert(res.data.message);\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        console.error(error.response.data.message);\n      });\n  };\n};\n\n\n// 포스트 디테일 수정하기\nconst editPostDetailDB = (id,data) => {\n  return function (dispatch, getState, { history }) {\n    const token = localStorage.getItem('token')\n    const headers = {\n      //  'Content-Type': 'multipart/form-data',\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      authorization : `Bearer ${token}`\n    };\n    axios\n      .put(`http://3.34.44.44/api/posts/detail/${id}/edit`, data, { headers: headers }) \n      .then((res) => {\n          alert(res.data.message)\n          history.push('/')\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n};\n\n//삭제하기\nconst deletePostlDB = (id) => {\n  return function (dispatch, getState, { history }) {\n    const token = localStorage.getItem('token')\n    const headers = {\n      //  'Content-Type': 'multipart/form-data',\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      authorization : `Bearer ${token}`\n    };\n    axios     \n      .delete(`http://3.34.44.44/api/posts/detail/${id}/edit`, {headers: headers }) \n      .then((res) => {\n          alert(res.data.message)\n          history.push('/')\n      })\n      .catch((err) => {\n            //오류시 err.response.data로 고정되어있는 것\n        console.log(err.response.data.message);\n      });\n  };\n};\n\n\n//리듀서\nexport default handleActions(\n  {\n    [SET_POST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list = action.payload.post_list;\n      }),\n\n    [ADD_POST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list.push(action.payload.post);\n      }),\n\n\n  },\n  initialState\n);\n\n//export\nconst actionCreators = {\n  setPost,\n  addPost,\n\n\n  addPostDB,\n  getPostsDB,\n  editPostDetailDB,\n  deletePostlDB,\n\n};\n\nexport { actionCreators };\n","import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport instance from \"../../common/axios\";\nimport axios from \"axios\";\n\n//액션타입\nconst ADD_COMMENT = \"ADD_COMMENT\";\nconst GET_COMMENT = \"GET_COMMENT\";\n\n//액션 생성함수\nconst getComment = createAction(GET_COMMENT, (comment_list) => ({\n  comment_list,\n}));\nconst addComment = createAction(ADD_COMMENT, (comment) => ({ comment }));\n\n\n//초기값\nconst initialState = {\n  list: [\n    {\n      postId: \"asd1nRas\",\n      contents: \"노래 너무 좋아요!\",\n      userId: \"미들웨어에서 받아온id\",\n    },\n  ],\n};\n\n// 미들웨어 코멘트가져오기\nconst getCommentDB = (id) => {\n  return function (dispatch, getState, { history }) {\n    const token = localStorage.getItem(\"token\");\n    const headers = {\n      //  'Content-Type': 'multipart/form-data',\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      authorization: `Bearer ${token}`,\n    };\n\n    // console.log(\"진입\", data);\n    axios\n      .get(`http://3.34.44.44/api/comment/${id}`, {}, { headers: headers })\n      //requset랑\n      .then((res) => {\n        console.log(res.data.result);\n        dispatch(getComment(res.data.result));\n      })\n      .catch((error) => {\n        console.error(error.response.data.message);\n      });\n  };\n};\n\n// 미들웨어 코멘트 추가\nconst addCommentDB = (id, data) => {\n  return function (dispatch, getState, { history }) {\n    const token = localStorage.getItem(\"token\");\n    const headers = {\n      //  'Content-Type': 'multipart/form-data',\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      authorization: `Bearer ${token}`,\n    };\n\n    console.log(\"진입\", data);\n    axios\n      .post(\n        `http://3.34.44.44/api/comment/${id}`,\n        { contents: data },\n        { headers: headers }\n      )\n      //requset랑\n      .then((res) => {\n        console.log(res.data.result);\n        dispatch(addComment(res.data.result));\n        alert(res.data.message);\n        alert(\"메인페이지로 돌아갑니다.\");\n        history.push('/')\n\n      })\n      .catch((error) => {\n        console.error(error.response.data.message);\n        alert(error.response.data.message);\n      });\n  };\n};\n\n// 미들웨어 코멘트 삭제\nconst deletedCommentDB = (commentId) => {\n  return function (dispatch, getState, { history }) {\n    const token = localStorage.getItem(\"token\");\n    const headers = {\n      //  'Content-Type': 'multipart/form-data',\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      authorization: `Bearer ${token}`,\n    };\n\n    // console.log(\"진입\", data);\n    axios\n      .delete(`http://3.34.44.44/api/comment/${commentId}`, {\n        headers: headers,\n      })\n      //requset랑\n      .then((res) => {\n        alert(res.data.message);\n        alert(\"메인페이지로 갑니다.\");\n        history.push('/');\n      })\n      .catch((error) => {\n        alert(error.response.data.message);\n      });\n  };\n};\n\nexport default handleActions(\n  {\n    [GET_COMMENT]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list = action.payload.comment_list;\n      }),\n    [ADD_COMMENT]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list.push(action.payload.comment);\n      }),\n\n  },\n  initialState\n);\n\nconst actionCreators = {\n  addComment,\n\n  addCommentDB,\n  getCommentDB,\n  deletedCommentDB,\n};\n\nexport { actionCreators };\n","//action과 reduser를 편하게 만들어 주는 것\nimport { createAction, handleActions } from \"redux-actions\";\n//불변성작업을 위한 immer\nimport { produce } from \"immer\";\n//axios\nimport axios from \"axios\";\n// import { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\n// Actions\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\";\nconst SET_USER = \"SET_USER\";\n// Action Creators\nconst logOut = createAction(LOG_OUT, (user) => ({ user }));\nconst getUser = createAction(GET_USER, (user) => ({ user }));\nconst setUser = createAction(SET_USER, (user) => ({ user }));\n// initialState\nconst initialState = {\n  user: null,\n  is_login: false,\n};\n//middleware\nconst getUserDB = () => {\n  return function (dispatch, getState, { history }) {\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    };\n    dispatch(getUser());\n    // axios\n    //   .get(\"http://3.34.44.44/api/users/logIn\", { headers: headers })\n    //   .then((res) => {\n    //     // console.log(res, \"res확인\");\n    //   })\n    //   .catch((error) => {\n    //     console.log(error, \"에러확인\");\n    //   });\n  };\n};\nconst loginDB = (id, pwd) => {\n  return function (dispatch, getState, { history }) {\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    };\n    axios\n      .post(\n        \"http://3.34.44.44/api/users/logIn\",\n        {\n          userId: id,\n          password: pwd,\n        },\n        { headers: headers }\n      )\n      .then((res) => {\n        // console.log(res, \"res확인\");\n        if (res.data.ok === true) {\n          dispatch(\n            setUser({\n              userId: res.data.result.userId,\n              token: res.data.result.token,\n            })\n          );\n          alert(res.data.message);\n          history.push(\"/\");\n        } else {\n          alert(res.data.message);\n        }\n      })\n      .catch((error) => {\n        console.log(error, \"에러확인\");\n      });\n  };\n};\nconst signupDB = (id, pwd, pwd_check) => {\n  return function (dispatch, getState, { history }) {\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n    };\n    axios\n      .post(\n        \"http://3.34.44.44/api/users/signUp\",\n        {\n          userId: id,\n          password: pwd,\n          passwordConfirm: pwd_check,\n        },\n        { headers: headers }\n      )\n      .then((res) => {\n        // console.log(res, \"회원가입res확인\");\n        if (res.data.ok === true) {\n          alert(res.data.message);\n          history.push(\"/login\");\n        } else {\n          alert(res.data.message);\n        }\n      })\n      .catch((error) => {\n        console.log(error.response, \"에러에러\");\n        if (error.response.data.ok === false) {\n          alert(error.response.data.message);\n        }\n      });\n  };\n};\n//reducer\nexport default handleActions(\n  {\n    //어떤 action에 대한 것인지 작성\n    //login&signup페이지 둘다에서 리덕스에 유저정보를 저장해야하기때문에 setuser로 이름을 통합하여 붙임\n    [SET_USER]: (state, action) =>\n      produce(state, (draft) => {\n        // console.log(\"쿠키\", action.payload.user.token);\n        console.log(\"확인용!\", action.payload);\n        localStorage.setItem(\"token\", action.payload.user.token);\n        draft.user = action.payload.user; //createAction을 쓰면 중간에 payload를 써주어야 값을 가져온다.\n        draft.is_login = true;\n      }),\n    [LOG_OUT]: (state, action) =>\n      produce(state, (draft) => {\n        localStorage.removeItem(\"token\");\n        draft.user = null;\n        draft.is_login = false;\n      }),\n    [GET_USER]: (state, action) =>\n      produce(state, (draft) => {\n        // console.log(localStorage.getItem(\"token\"), \"이게 토큰확인\");\n        if (localStorage.getItem(\"token\")) {\n          console.log(\"토큰있음\");\n          draft.is_login = true;\n        } else {\n          console.log(\"토큰없음\");\n          draft.is_login = false;\n        }\n      }),\n  },\n  initialState\n);\n/*\n여기서 produce는 불변성작업을 위한 immer를 쓰는 것이다.\nproduce를 쓰면 원본값이 뭔지 알아야 하기때문에 처음 state를 쓰고 그 다음\n원본값을 가지고 어떤 작업을 하고 싶은지 함수로 쓰면 된다.\nproduce(state, (draft는 immer가 원본값을 복사해서 주는 값이다.) => {어떤 작업을 해야하는지})\n*/\n//action creator export\nconst actionCreators = {\n  logOut,\n  getUser,\n  setUser,\n  signupDB,\n  loginDB,\n  getUserDB,\n};\nexport { actionCreators };\n\n\n\n\n\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { createBrowserHistory } from \"history\";\nimport { connectRouter } from \"connected-react-router\";\n\n\nimport Post from \"./modules/post\";\nimport Comment from \"./modules/comment\";\nimport User from \"./modules/user\";\n\n\nexport const history = createBrowserHistory();\n\nconst rootReducer = combineReducers({\n  user: User,\n  post: Post,\n  comment: Comment,\n  router: connectRouter(history),\n});\n\n// 미들웨어 \nconst middlewares = [thunk.withExtraArgument({ history: history })];\n\n// 지금이 어느 환경인 지 알려줘요. (개발환경, 프로덕션(배포)환경 ...)\nconst env = process.env.NODE_ENV;\n\n// 개발환경에서는 로거라는 걸 하나만 더 써볼게요.\nif (env === \"development\") {\n  const { logger } = require(\"redux-logger\");\n  middlewares.push(logger);\n}\n\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    })\n    : compose;\n\n//미들웨어 묶기\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\n\n// 스토어만들기\nlet store = (initialStore) => createStore(rootReducer, enhancer);\n\n\nexport default store();\n\n\n","import React from \"react\";\nimport { Text, Input, Image, Grid, Upload } from \"../../elements\";\nimport { history } from \"../../redux/configureStore\";\nimport { actionCreators as postActions } from \"../../redux/modules/post\";\nimport { useDispatch } from \"react-redux\";\nimport styled from 'styled-components';\nimport Button from '@mui/material/Button';\n\n\n\nconst Post = (props) => {\n  const dispatch = useDispatch();\n  console.log(\"오류냐?\", props);\n  const {\n    category1,\n    category2,\n    category3,\n    desc,\n    singer,\n    url,\n    userId,\n    songName,\n    postId,\n  } = props._post;\n\n  const delete_post = () => {\n    dispatch(postActions.deletePostlDB(postId));\n  };\n\n  return (\n    <React.Fragment>\n    <Grid width=\"50vw\" margin=\" auto \">\n      <Text margin=\"0px\" size=\"36px\" bold center></Text>\n      <Grid is_flex>\n        <Grid>\n          <iframe\n            border-radius=\"5px\"\n            width=\"100%\"\n            height=\"360px\"\n            src={`https://www.youtube.com/embed/${\n              props._post.url.split('=')[1]\n            }`}\n            frameborder=\"0\"\n            allowfullscreen\n          ></iframe>\n        </Grid>\n        <Grid\n          bg=\"#2D2D2D\"\n          width=\"450px\"\n          height=\"360px\"\n          border\n          margin=\"0 0 0 20px\"\n          padding=\"10px 15px\"\n          overflow\n        >\n          <Text color=\"white\" margin=\"0 0 15px 0px\" size=\"16px\" bold right>\n            작성자 : {userId}{' '}\n          </Text>\n          <Text color=\"white\" margin=\"10px 0 20px 0px\" bold>\n            가수이름 : {singer}{' '}\n          </Text>\n          <Text color=\"white\" margin=\"10px 0 20px 0px\" bold>\n            곡 이름 : {songName}{' '}\n          </Text>\n          <Text color=\"white\" size=\"15px\" margin=\"0 0 20px 0px\" bold>\n            곡 설명 : {desc}{' '}\n          </Text>\n          <Text color=\"white\" size=\"17px\" margin=\"0 0 20px 0px\" bold>\n            {' '}\n            유튜브 링크 :{' '}\n            <Link alink=\"darkgreen\" href={url} target=\"_blank\">\n              {url}{' '}\n            </Link>\n          </Text>\n          <Text color=\"white\" size=\"15px\" margin=\"0 0 20px 0px\" bold center>\n            #{category1} #{category2} #{category3}\n          </Text>\n        </Grid>\n      </Grid>\n\n      \n      <Grid bg=\"white\" margin=\"30px 0 0 0\" end_flex margin=\"auto\">\n        <Button\n\n          display=\"block\"\n          width=\"auto\"\n          padding=\"20px\"\n          margin=\"10px 30px 0px 0px\"\n          onClick={() => {\n            history.push('/detail/' + postId + '/edit');\n          }}\n        >\n          수정\n        </Button>\n        <Button\n          display=\"block\"\n          width=\"auto\"\n          padding=\"20px\"\n          margin=\"10px 30px 0px 0px\"\n          onClick={() => {\n            delete_post();\n          }}\n        >\n          삭제\n        </Button>\n\n      </Grid>\n    </Grid>\n  </React.Fragment>\n);\n};\nconst Link = styled.a`\ntext-decoration: none;\ncolor: royalblue;\n`;\n\n// Post.defaultProps = {\n\n//   singer: \"외국인\",\n//   musicName: \"보고싶다\",\n//   desc: \"missing you\",\n//   lnik: \"www.abc.com423432432423432432432432423\",\n//   musicGenre: \"발라드\",\n//   feeling: \"우울\",\n//   season: \"가을\",\n//   user_name: \"GCEE\",\n//   id: 0,\n\n// };\n\nexport default Post;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { Text, Input, Image, Grid,  Upload } from \"../../elements\";\nimport { actionCreators as commentAction} from \"../../redux/modules/comment\";\nimport Button from '@mui/material/Button';\n\nconst CommentWrite = (props) => {\n\n  \n\n  const id = useParams().id\n  console.log(id)\n  \n\n\n  const dispatch = useDispatch();\n  \n  // usestate\n  const [comment, setComment] = React.useState(\"\");\n  console.log(comment)\n  // 코멘트 삽입\n  const changeComment = (e) => {\n   setComment(e.target.value)\n  };\n \n\n  const save = () => {\n      dispatch(commentAction.addCommentDB(id,comment))\n  };\n\n  return (\n    <React.Fragment>\n      <Grid width=\"50vw\" margin=\"0px auto\">\n        <Text size=\"16px\" margin=\"10px 0px\">\n          댓글 (총 0개)\n        </Text>\n        <Grid is_flex>\n          <Input\n          placeholder=\"댓글을 입력해주세요:)\"\n          value={comment}\n          _onChange={changeComment}\n          >\n          </Input>\n\n          <Button \n          width=\"65px\" \n          padding=\"18px\"\n           margin=\"0px 0px 0px 15px\"\n           onClick={save}>\n            작성\n          </Button>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default CommentWrite;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as commentActions } from \"../../redux/modules/comment\";\n\nimport { Text, Input, Image, Grid, Upload } from \"../../elements\";\nimport Button from '@mui/material/Button';\nconst CommentItem = (props) => {\n\n  const dispatch = useDispatch();\n  const { commentId, contents, id, postId, userId } = props;\n\n  const [thisState, setThisState] = React.useState('ready');\n\n  const handleClick = (str, e) => {\n    setThisState(str)\n  }\n\n  const submitUpdate = () => {\n    console.log('update');\n  }\n\n  const submitDelete = () => {\n      dispatch(commentActions.deletedCommentDB(commentId))\n  }\n\n  const renderSwitch = (state) => {\n    switch (state) {\n      default:\n      case 'ready':\n        return (\n          <Grid column_flex width=\"auto\" margin=\"0px 0px 0px 15px\">\n            <Button width=\"65px\" padding=\"8px\" onClick={(e) => handleClick('delete', e)}>\n              삭제\n            </Button>\n          </Grid>\n        )\n      case 'delete':\n        return (\n          <Grid column_flex width=\"auto\" margin=\"0px 0px 0px 5px\">\n            <Button \n            width=\"50px\"\n             padding=\"5px\" \n             onClick={submitDelete}\n             \n             >\n              확인\n            </Button>\n            <Button width=\"50px\" padding=\"5px\" onClick={(e) => handleClick('ready', e)}>\n              취소\n            </Button>\n          </Grid>\n        )\n    }\n  }\n\n\n  return (\n    <React.Fragment>\n      <Grid is_flex margin=\"0px 0px 20px 0px\" >\n        <Grid width=\"auto\" margin=\"0px 8px 0px 0px\">\n          <Text bold>{userId}</Text>\n        </Grid>\n        <Grid border>\n          <Text>{contents}</Text>\n        </Grid>\n        {renderSwitch(thisState)}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n\n\n\nexport default CommentItem;","import React from \"react\";\nimport { Text, Input, Image, Grid, Button, Upload } from \"../../elements\";\nimport CommentItem from \"./CommentItem\";\n\nconst CommentList = (props) => {\n\n const comment_list = props.comment_list\n\n   return (\n    <React.Fragment>\n      <Grid width=\"50vw\" margin=\"20px auto\">\n        <Grid>\n          {comment_list.map((p,idx)=>{\n            return <CommentItem key={p.commentId} {...p}/>\n          })}\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default CommentList;\n\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Post from \"../components/PostDetail/Post\";\nimport CommentWrite from \"../components/PostDetail/CommentWrite\";\nimport CommentList from \"../components/PostDetail/CommentList\";\nimport { useParams } from \"react-router-dom\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport { actionCreators as commentActions } from \"../redux/modules/comment\";\nconst PostDetail = (props) => {\n  const dispatch = useDispatch()\n  const { id:postId }  = useParams();\n  // console.log(postId)\n\n  const post_list = useSelector((state) => state.post.list);\n  const comment_list = useSelector((state) => state.comment.list);\n    \n  console.log(comment_list);\n\n  // id를 이용해서 상세 값 받아오기\n  let _post = post_list.find((p) =>  {\n    // console.log(p.postId);\n    // console.log(postId);\n     return p.postId == postId})\n    // console.log(_post)\n\n\n  React.useEffect(() => {\n    console.log('코멘트가져왔나?')\n     dispatch(commentActions.getCommentDB(postId))\n  }, [])\n\n\n  return (\n    <React.Fragment>\n      <Post _post={_post} />  \n      <CommentWrite />\n      <CommentList comment_list={comment_list}/>\n    </React.Fragment>\n  );\n};\n\nexport default PostDetail;","import React from \"react\";\nimport { actionCreators as userActions } from \"../redux/modules/post\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport { useSelector } from \"react-redux\";\nimport { history } from \"../redux/configureStore\";\nimport Button from '@mui/material/Button';\nimport {\n  Text,\n  Input,\n  Image,\n  Grid,\n  \n  Upload,\n  DropDown,\n  DropDown2,\n} from \"../elements\";\nconst PostEdit = (props) => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  console.log(id);\n  console.log(useParams());\n  const post_list = useSelector((state) => state.post.list);\n  console.log(post_list);\n  let _post = post_list.find((p) => p.postId == id); // 상세페이지 데이터\n  console.log(_post);\n  //useState\n  const [singer, setSinger] = React.useState(_post ? _post.singer : \"\");\n  const [songName, setSongName] = React.useState(_post ? _post.songName : \"\");\n  const [desc, setDesc] = React.useState(_post ? _post.desc : \"\");\n  const [url, setUrl] = React.useState(_post ? _post.url : \"\");\n  const [category1, setCategory1] = React.useState(\n    _post ? _post.category1 : \"\"\n  );\n  const [category2, setCategory2] = React.useState(\n    _post ? _post.category2 : \"\"\n  );\n  const [category3, setCategory3] = React.useState(\n    _post ? _post.category3 : \"\"\n  );\n  // change함수\n  const changeSinger = (e) => {\n    setSinger(e.target.value);\n  };\n  const changeSongName = (e) => {\n    setSongName(e.target.value);\n  };\n  const changeDesc = (e) => {\n    setDesc(e.target.value);\n  };\n  const changeUrl = (e) => {\n    setUrl(e.target.value);\n  };\n  const selectGenre = (e) => {\n    setCategory1(e.target.value);\n  };\n  const selectFeeling = (e) => {\n    setCategory2(e.target.value);\n  };\n  const selectSeason = (e) => {\n    setCategory3(e.target.value);\n  };\n  // 입력받은 값\n  const data = {\n    singer: singer,\n    songName: songName,\n    desc: desc,\n    url: url,\n    category1: category1,\n    category2: category2,\n    category3: category3,\n  };\n  // 리덕스 전송\n  const re_save = () => {\n    dispatch(userActions.editPostDetailDB(id, data));\n  };\n  return (\n    <React.Fragment>\n      <Grid>\n        <Grid width=\"30vw\" margin=\"90px auto\" border minWidth=\"600px\">\n          <Grid width=\"570px\" padding=\"20px 30px\">\n            <Grid margin=\"0px 0px 20px 0px\">\n              <Text margin=\"0px\" size=\"36px\" bold center>\n                포스트 수정\n              </Text>\n            </Grid>\n            <Grid is_flex>\n              <Text size=\"20px\" width=\"140px\">\n                가수이름\n              </Text>\n              <Input\n                value={singer}\n                _onChange={changeSinger}\n                placeholder=\"가수 이름을 입력해주세요:)\"\n              ></Input>\n            </Grid>\n            <Grid is_flex>\n              <Text size=\"20px\" width=\"140px\">\n                곡 이름\n              </Text>\n              <Input\n                value={songName}\n                _onChange={changeSongName}\n                placeholder=\"곡 이름을 입력해주세요:)\"\n              ></Input>\n            </Grid>\n            <Grid is_flex>\n              <Text size=\"20px\" width=\"140px\">\n                곡 설명\n              </Text>\n              <Input\n                value={desc}\n                _onChange={changeDesc}\n                placeholder=\"곡 설명을 입력해주세요:)\"\n              ></Input>\n            </Grid>\n            <Grid is_flex>\n              <Text size=\"20px\" width=\"140px\">\n                유튜브링크\n              </Text>\n              <Input\n                value={url}\n                _onChange={changeUrl}\n                placeholder=\"유튜브 링크를 입력해주세요:)\"\n              ></Input>\n            </Grid>\n            <Grid margin=\"20px 0px\">\n              <Grid flex>\n                <Text center size=\"20px\" width=\"70px\" margin=\"6px 32px 0px 0px\">\n                  장르\n                </Text>\n                <DropDown2\n                  _onChange={selectGenre}\n                  value={category1}\n                  label=\"장르 :)\"\n                  help=\"장르를 선택해주세요!\"\n                  list1=\"발라드\"\n                  list2=\"댄스\"\n                  list3=\"랩/힙합\"\n                  list4=\"트로트\"\n                  list5=\"인디음악\"\n                />\n              </Grid>\n              <Grid flex>\n                <Text center size=\"20px\" width=\"70px\" margin=\"6px 32px 0px 0px\">\n                  감성\n                </Text>\n                <DropDown2\n                  _onChange={selectFeeling}\n                  value={category2}\n                  label=\"기분 :)\"\n                  help=\"어울리는 기분을 선택해주세요!\"\n                  list1=\"신나는\"\n                  list2=\"슬픈/우울한\"\n                  list3=\"기분전환\"\n                  list4=\"설레는\"\n                  list5=\"스트레스 풀 때\"\n                />\n              </Grid>\n              <Grid flex>\n                <Text center size=\"20px\" width=\"70px\" margin=\"6px 32px 0px 0px\">\n                  계절\n                </Text>\n                <DropDown2\n                  _onChange={selectSeason}\n                  value={category3}\n                  label=\"계절 :)\"\n                  help=\"어울리는 계절을 선택해주세요!\"\n                  list1=\"봄\"\n                  list2=\"여름\"\n                  list3=\"가을\"\n                  list4=\"겨울\"\n                />\n              </Grid>\n            </Grid>\n            <Grid end_flex margin=\"0px 0px 10px 0px\">\n              <Button\n                width=\"80px\"\n                padding=\"20px\"\n                margin=\"10px 0px 0px 30px\"\n               onClick={re_save}\n              >\n                저장\n              </Button>\n              <Button\n                width=\"80px\"\n                padding=\"20px\"\n                margin=\"10px 10px 0px 10px\"\n                onClick={() => {\n                  history.push(\"/\");\n                }}\n              >\n                취소\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\nexport default PostEdit;","import React from \"react\";\nimport { actionCreators as userActions } from \"../redux/modules/post\";\nimport { useDispatch } from \"react-redux\";\nimport { history } from \"../redux/configureStore\";\nimport Button from '@mui/material/Button';\nimport {\n  Text,\n  Input,\n  Image,\n  Grid,\n\n  Upload,\n  DropDown,\n  DropDown2,\n} from \"../elements\";\n\nconst PostAdd = (props) => {\n  const dispatch = useDispatch();\n\n  //useState\n  const [singer, setSinger] = React.useState(\"\");\n  const [songName, setSongName] = React.useState(\"\");\n  const [desc, setDesc] = React.useState(\"\");\n  const [url, setUrl] = React.useState(\"\");\n  const [category1, setCategory1] = React.useState(\"\");\n  const [category2, setCategory2] = React.useState(\"\");\n  const [category3, setCategory3] = React.useState(\"\");\n\n  // change함수\n  const changeSinger = (e) => {\n    setSinger(e.target.value);\n  };\n\n  const changeSongName = (e) => {\n    setSongName(e.target.value);\n  };\n  const changeDesc = (e) => {\n    setDesc(e.target.value);\n  };\n  const changeUrl = (e) => {\n    setUrl(e.target.value);\n  };\n\n  const selectGenre = (e) => {\n    setCategory1(e.target.value);\n  };\n\n  const selectFeeling = (e) => {\n    setCategory2(e.target.value);\n  };\n\n  const selectSeason = (e) => {\n    setCategory3(e.target.value);\n  };\n\n  const data = {\n    singer: singer,\n    songName: songName,\n    desc: desc,\n    url: url,\n    category1: category1,\n    category2: category2,\n    category3: category3,\n  };\n\n  // 리덕스 전송\n  const save = () => {\n    dispatch(userActions.addPostDB(data));\n  };\n\n  return (\n    <React.Fragment>\n      <Grid>\n        <Grid width=\"30vw\" margin=\"90px auto\" border minWidth=\"600px\">\n          <Grid width=\"570px\" padding=\"20px 30px\">\n            <Grid margin=\"0px 0px 20px 0px\">\n              <Text margin=\"0px\" size=\"36px\" bold center>\n                포스트 생성\n              </Text>\n            </Grid>\n\n            <Grid is_flex>\n              <Text size=\"20px\" width=\"140px\">\n                가수이름\n              </Text>\n              <Input\n                value={singer}\n                _onChange={changeSinger}\n                placeholder=\"가수 이름을 입력해주세요:)\"\n              ></Input>\n            </Grid>\n\n            <Grid is_flex>\n              <Text size=\"20px\" width=\"140px\">\n                곡 이름\n              </Text>\n              <Input\n                value={songName}\n                _onChange={changeSongName}\n                placeholder=\"곡 이름을 입력해주세요:)\"\n              ></Input>\n            </Grid>\n\n            <Grid is_flex>\n              <Text size=\"20px\" width=\"140px\">\n                곡 설명\n              </Text>\n              <Input\n                value={desc}\n                _onChange={changeDesc}\n                placeholder=\"곡 설명을 입력해주세요:)\"\n              ></Input>\n            </Grid>\n\n            <Grid is_flex>\n              <Text size=\"20px\" width=\"140px\" margin=\"6px 0px\">\n                유튜브링크\n              </Text>\n              <Input\n                value={url}\n                _onChange={changeUrl}\n                placeholder=\"유튜브 링크를 입력해주세요:)\"\n              ></Input>\n            </Grid>\n\n            <Grid margin=\"20px 0px\">\n              <Grid flex>\n                <Text center size=\"20px\" width=\"70px\" margin=\"6px 32px 0px 0px\">\n                  장르\n                </Text>\n                <DropDown2\n                  _onChange={selectGenre}\n                  value={category1}\n                  label=\"장르 :)\"\n                  help=\"장르를 선택해주세요!\"\n                  list1=\"발라드\"\n                  list2=\"댄스\"\n                  list3=\"랩/힙합\"\n                  list4=\"트로트\"\n                  list5=\"인디음악\"\n                />\n              </Grid>\n\n              <Grid flex>\n                <Text center size=\"20px\" width=\"70px\" margin=\"6px 32px 0px 0px\">\n                  감성\n                </Text>\n                <DropDown2\n                  _onChange={selectFeeling}\n                  value={category2}\n                  label=\"기분 :)\"\n                  help=\"어울리는 기분을 선택해주세요!\"\n                  list1=\"신나는\"\n                  list2=\"슬픈/우울한\"\n                  list3=\"기분전환\"\n                  list4=\"설레는\"\n                  list5=\"스트레스 풀 때\"\n                />\n              </Grid>\n\n              <Grid flex>\n                <Text center size=\"20px\" width=\"70px\" margin=\"6px 32px 0px 0px\">\n                  계절\n                </Text>\n\n                <DropDown2\n                  _onChange={selectSeason}\n                  value={category3}\n                  label=\"계절 :)\"\n                  help=\"어울리는 계절을 선택해주세요!\"\n                  list1=\"봄\"\n                  list2=\"여름\"\n                  list3=\"가을\"\n                  list4=\"겨울\"\n                />\n              </Grid>\n            </Grid>\n\n            <Grid end_flex margin=\"0px 0px 10px 0px\">\n              <Button\n                width=\"80px\"\n                padding=\"20px\"\n                margin=\"10px 0px 0px 30px\"\n                onClick={save}\n              >\n                저장\n              </Button>\n              <Button width=\"80px\" padding=\"20px\" margin=\"10px 10px 0px 10px\"\n              onClick={()=>{\n                history.goBack('/')\n              }}\n              >\n                취소\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default PostAdd;\n","import React from \"react\";\nimport { Text, Grid } from \"../elements\";\nimport styled from \"styled-components\";\nimport { history } from \"../redux/configureStore\";\nconst Card = (props) => {\n  console.log(\"리덕스 초기값\", props);\n  const {\n    postId,\n    singer,\n    songName,\n    desc,\n    url,\n    category1,\n    category2,\n    category3,\n  } = props;\n  return (\n    <React.Fragment>\n      <Grid padding=\"10px\" margin=\"5px 10px\" width=\"auto\">\n        <Grid\n          _onClick={() => {\n            history.push(\"/detail/\" + postId);\n          }}\n          width=\"auto\"\n          border=\"1px solid black\"\n          padding=\"0px\"\n          bg=\"#2D2D2D\"\n        >\n          <Image\n            src={\n              \"http://img.youtube.com/vi/\" + props.url.split(\"=\")[1] + \"/0.jpg\"\n            }\n          />\n          <Text bold margin=\"15px 0 10px 20px\" color=\"#FFFFFF\">\n            가수 : {singer}\n          </Text>\n          <Text bold margin=\"0 0 20px 20px\" color=\"#FFFFFF\">\n            곡명 : {songName}\n          </Text>\n          <Text bold margin=\"0 0 15px 20px\" size=\"20px\" color=\"#7F6EE3\">\n            {category1 ? `#${category1} ` : \"\"}\n            {category2 ? `#${category2} ` : \"\"}\n            {category3 ? `#${category3} ` : \"\"}\n          </Text>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\nconst Image = styled.img`\n  border-radius: 5px;\n`;\nexport default Card;","import * as React from \"react\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Button from \"@mui/material/Button\";\nimport styled from \"styled-components\";\nimport {\n  actionCreators,\n  actionCreators as postActions,\n} from \"../../redux/modules/post\";\nimport { useDispatch } from \"react-redux\";\nexport default function SelectAutoWidth() {\n  const dispatch = useDispatch();\n  const pick_category = () => {\n    const categoryData = {};\n    if (category1 !== \"전체\") {\n      categoryData.category1 = category1;\n    }\n    if (category2 !== \"전체\") {\n      categoryData.category2 = category2;\n    }\n    if (category3 !== \"전체\") {\n      categoryData.category3 = category3;\n    }\n    console.log(categoryData);\n    dispatch(postActions.getPostsDB(categoryData));\n  };\n  //use state\n  const [category1, setCategory1] = React.useState(\"\");\n  const [category2, setCategory2] = React.useState(\"\");\n  const [category3, setCategory3] = React.useState(\"\");\n  const handleCategory1 = (event) => {\n    setCategory1(event.target.value);\n  };\n  const handleCategory2 = (event) => {\n    setCategory2(event.target.value);\n  };\n  const handleCategory3 = (event) => {\n    setCategory3(event.target.value);\n  };\n  return (\n    <Box>\n      <div>\n        <FormControl sx={{ m: 1, minWidth: 80 }}>\n          <InputLabel id=\"demo-simple-select-autowidth-label\">장르</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-autowidth-label\"\n            id=\"demo-simple-select-autowidth\"\n            value={category1}\n            onChange={handleCategory1}\n            autoWidth\n            label=\"장르\"\n          >\n            <MenuItem value=\"전체\">\n              <em>전체</em>\n            </MenuItem>\n            <MenuItem value=\"발라드\">발라드</MenuItem>\n            <MenuItem value=\"댄스\">댄스</MenuItem>\n            <MenuItem value=\"랩/힙합\">랩/힙합</MenuItem>\n            <MenuItem value=\"트로트\">트로트</MenuItem>\n            <MenuItem value=\"인디음악\">인디음악</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n      <div>\n        <FormControl sx={{ m: 1, minWidth: 80 }}>\n          <InputLabel id=\"demo-simple-select-autowidth-label\">감성</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-autowidth-label\"\n            id=\"demo-simple-select-autowidth\"\n            value={category2}\n            onChange={handleCategory2}\n            autoWidth\n            label=\"감성\"\n          >\n            <MenuItem value=\"전체\">\n              <em>전체</em>\n            </MenuItem>\n            <MenuItem value=\"신나는\">신나는</MenuItem>\n            <MenuItem value=\"슬픈/우울한\">슬픈/우울한</MenuItem>\n            <MenuItem value=\"기분전환\">기분전환</MenuItem>\n            <MenuItem value=\"설레는\">설레는</MenuItem>\n            <MenuItem value=\"스트레스 풀 때\">스트레스 풀 때</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n      <div>\n        <FormControl sx={{ m: 1, minWidth: 80 }}>\n          <InputLabel id=\"demo-simple-select-autowidth-label\">계절</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-autowidth-label\"\n            id=\"demo-simple-select-autowidth\"\n            value={category3}\n            onChange={handleCategory3}\n            autoWidth\n            label=\"계절\"\n          >\n            <MenuItem value=\"전체\">\n              <em>전체</em>\n            </MenuItem>\n            <MenuItem value=\"봄\">봄</MenuItem>\n            <MenuItem value=\"여름\">여름</MenuItem>\n            <MenuItem value=\"가을\">가을</MenuItem>\n            <MenuItem value=\"겨울\">겨울</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n      <Button\n        variant=\"contained\"\n        onClick={pick_category}\n        style={{\n          color: \"#FFFFFF\",\n          fontWeight: \"800\",\n          backgroundColor: \"black\",\n          fontFamily: \"Cafe24SsurroundAir\",\n        }}\n      >\n        검색\n      </Button>\n      <Button\n        variant=\"contained\"\n        onClick={() => {\n          dispatch(actionCreators.getPostsDB());\n          setCategory1('전체')\n          setCategory2('전체')\n          setCategory3('전체')\n        }}\n        style={{\n          color: \"#FFFFFF\",\n          fontWeight: \"800\",\n          backgroundColor: \"black\",\n          fontFamily: \"Cafe24SsurroundAir\",\n        }}\n      >\n        초기화\n      </Button>\n    </Box>\n  );\n}\nconst Box = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  Button {\n    margin-left: 20px;\n  }\n`;","import React from 'react';\nimport Grid from '../../elements/Grid';\nimport Image from '../../elements/Image';\nimport Text from '../../elements/Text';\nimport { history } from '../../redux/configureStore';\n\nconst Mainpost = (props) => {\n  console.log(props);\n\n  const {\n    category1,\n    category2,\n    category3,\n    date,\n    desc,\n    likeUser,\n    singer,\n    songName,\n    url,\n    userId,\n  } = props;\n\n  return (\n    <Grid padding=\"16px\" is_flex wrap>\n      <Grid\n        _onClick={() => {\n          history.push('/detail');\n        }}\n        width=\"auto\"\n        border=\"1px solid black\"\n        padding=\"10px\"\n      >\n        <Grid width=\"auto\">\n          <Image shape=\"rectangle\" src={url} />\n\n          <Text size=\"10px\">{songName}</Text>\n          <Text size=\"10px\">{singer}</Text>\n          <Text size=\"10px\">{userId}</Text>\n          <Text size=\"15px\" bold>\n            {category1}\n            {category2}\n            {category3}\n          </Text>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nMainpost.defaultProps = {};\n\nexport default Mainpost;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Card from \"../components/Card\";\nimport styled from \"styled-components\";\nimport { useEffect } from \"react\";\nimport { history } from \"../redux/configureStore\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport Mainmenu from \"../components/Mainpost/Mainmenu\";\nimport MainPostList from \"../components/Mainpost/MainPostList\";\nconst PostList = (props) => {\n  const dispatch = useDispatch();\n  const post_list = useSelector((state) => state.post.list);\n  console.log(post_list);\n  React.useEffect(() => {\n    console.log(\"실행됏나?\");\n    dispatch(postActions.getPostsDB());\n  }, []);\n  return (\n    <React.Fragment>\n      <Mainmenu />\n      <Grid>\n        {post_list.map((p, idx) => {\n          return <Card key={p.postId} {...p} />;\n        })}\n      </Grid>\n    </React.Fragment>\n  );\n};\nconst Grid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\nexport default PostList;","export default __webpack_public_path__ + \"static/media/MRL.befc2519.png\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Text, Input, Grid, Button } from \"../elements\";\nimport MRL from \"../MRL.png\";\nimport { useHistory } from \"react-router-dom\";\n//1. ation 불러다 사용하기\nimport { useDispatch } from \"react-redux\";\n// 4. 디스패치 안에 넣을 액션생성함수 가져오기\nimport { actionCreators as userActions } from \"../redux/modules/user\";\nconst LogIn = (props) => {\n  //2. 디스패치 만들기\n  const dispatch = useDispatch();\n  const [id, setId] = React.useState(\"\");\n  const [pwd, setPwd] = React.useState(\"\");\n  //3. login함수에 디스패치 넣기 dispatch()\n  const login = () => {\n    if (id === \"\" || pwd === \"\") {\n      window.alert(\"아이디 혹은 비밀번호를 입력해주세요!\");\n      return;\n    }\n    //5. 디스패치안에 액션생성함수 넣기\n    dispatch(userActions.loginDB(id, pwd));\n  };\n  //나중에 리덕스사용시 제거\n  let history = useHistory();\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\" width=\"50%\" margin=\"auto\">\n        <Image src={MRL} />\n        <Text size=\"25px\" bold margin=\"0\">\n          로그인\n        </Text>\n        <Grid padding=\"10px 0px\">\n          <Input\n            label=\"아이디\"\n            placeholder=\"아이디를 입력해주세요.\"\n            value={id}\n            _onChange={(e) => {\n              setId(e.target.value);\n            }}\n          />\n        </Grid>\n        <Grid padding=\"10px 0px\">\n          <Input\n            label=\"패스워드\"\n            placeholder=\"패스워드 입력해주세요.\"\n            type=\"password\"\n            value={pwd}\n            _onChange={(e) => {\n              setPwd(e.target.value);\n            }}\n          />\n        </Grid>\n        <Button\n          font\n          bold\n          bg=\"black\"\n          color=\"#FFFFFF\"\n          margin=\"5px 0px\"\n          height=\"50px\"\n          radius=\"0.4rem\"\n          _onClick={() => {\n            console.log(\"로그인했음\");\n            login();\n          }}\n        >\n          로그인\n        </Button>\n        <Button\n          font\n          bold\n          bg=\"black\"\n          color=\"#FFFFFF\"\n          margin=\"5px 0px\"\n          height=\"50px\"\n          radius=\"0.4rem\"\n          _onClick={() => {\n            history.push(\"/signup\");\n          }}\n        >\n          회원가입\n        </Button>\n      </Grid>\n    </React.Fragment>\n  );\n};\nconst Image = styled.img`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n  width: 40%;\n  height: 40%;\n`;\nexport default LogIn;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Text, Input, Button } from \"../elements\";\nimport MRL from \"../MRL.png\";\nimport { useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\nimport { history } from \"../redux/configureStore\";\nconst Signup = (props) => {\n  const dispatch = useDispatch();\n  const [id, setId] = React.useState(\"\");\n  const [pwd, setPwd] = React.useState(\"\");\n  const [pwd_check, setPwdCheck] = React.useState(\"\");\n  const signup = () => {\n    dispatch(userActions.signupDB(id, pwd, pwd_check));\n  };\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\" width=\"50%\" margin=\"auto\">\n        <Image src={MRL} />\n        <Text size=\"25px\" bold margin=\"0\">\n          회원가입\n        </Text>\n        <Grid padding=\"10px 0px\">\n          <Input\n            label=\"아이디\"\n            placeholder=\"아이디를 입력해주세요.\"\n            value={id}\n            _onChange={(e) => {\n              setId(e.target.value);\n            }}\n          />\n        </Grid>\n        <Grid padding=\"10px 0px\">\n          <Input\n            label=\"비밀번호\"\n            placeholder=\"비밀번호를 입력해주세요.\"\n            type=\"password\"\n            value={pwd}\n            _onChange={(e) => {\n              setPwd(e.target.value);\n            }}\n          />\n        </Grid>\n        <Grid padding=\"10px 0px\">\n          <Input\n            label=\"비밀번호 확인\"\n            placeholder=\"비밀번호를 다시 입력해주세요.\"\n            type=\"password\"\n            value={pwd_check}\n            _onChange={(e) => {\n              setPwdCheck(e.target.value);\n            }}\n          />\n        </Grid>\n        <Button\n          font\n          bold\n          bg=\"black\"\n          color=\"#FFFFFF\"\n          margin=\"5px 0px\"\n          height=\"50px\"\n          radius=\"0.4rem\"\n          _onClick={() => {\n            signup();\n          }}\n        >\n          회원가입하기\n        </Button>\n        <Button\n          font\n          bold\n          bg=\"black\"\n          color=\"#FFFFFF\"\n          margin=\"5px 0px\"\n          height=\"50px\"\n          radius=\"0.4rem\"\n          _onClick={() => {\n            history.push('/')\n          }}\n        >\n          취소\n        </Button>\n      </Grid>\n    </React.Fragment>\n  );\n};\nconst Image = styled.img`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n  width: 40%;\n  height: 40%;\n`;\nSignup.defaultProps = {};\nexport default Signup;","export default __webpack_public_path__ + \"static/media/mini_mrl.78346372.png\";","import React from \"react\";\nimport { Text, Grid, Button } from \"../elements\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\nimport mini_mrl from \"../../src/mini_mrl.png\";\nimport styled from \"styled-components\";\nimport { history } from \"../redux/configureStore\";\nimport { actionCreators } from \"../redux/modules/post\";\nconst Header = (props) => {\n  const dispatch = useDispatch();\n  const is_login = useSelector((state) => state.user.is_login);\n  const is_token = window.localStorage.getItem(\"token\") ? true : false;\n  if (is_login && is_token) {\n    return (\n      <>\n        <Grid is_flex>\n          <Grid is_flex padding=\"4px 25px 4px 0px\">\n            <Image\n              src={mini_mrl}\n              onClick={() => {\n                history.push(\"/\");\n              }}\n            />\n            <Grid>\n              <Text\n                margin=\"0px\"\n                size=\"24px\"\n                bold\n                _onClick={() => {\n                  history.push(\"/\");\n                }}\n              >\n                MRL\n              </Text>\n            </Grid>\n            <Grid is_flex width=\"auto\">\n              <Button\n                bold\n                font\n                width=\"150px\"\n                bg=\"black\"\n                color=\"#FFFFFF\"\n                margin=\"0px 5px\"\n                height=\"40px\"\n                radius=\"0.4rem\"\n                _onClick={() => {\n                  history.push(\"/addpost\");\n                }}\n              >\n                작성\n              </Button>\n\n              <Button\n                bold\n                font\n                width=\"150px\"\n                bg=\"black\"\n                color=\"#FFFFFF\"\n                margin=\"0px 5px\"\n                height=\"40px\"\n                radius=\"0.4rem\"\n                _onClick={() => {\n                  dispatch(userActions.logOut({}));\n                  history.push(\"/\");\n                }}\n              >\n                로그아웃\n              </Button>\n            </Grid>\n          </Grid>\n        </Grid>\n        <hr></hr>\n      </>\n    );\n  }\n  return (\n    <>\n      {history.push(\"/\")}\n      <Grid is_flex>\n        <Grid is_flex padding=\"4px 25px 4px 0px\">\n          <Image\n            src={mini_mrl}\n            onClick={() => {\n              history.push(\"/\");\n            }}\n          />\n          <Grid>\n            <Text\n              margin=\"0px\"\n              size=\"24px\"\n              bold\n              _onClick={() => {\n                history.push(\"/\");\n              }}\n            >\n              MRL\n            </Text>\n          </Grid>\n        </Grid>\n        <Grid is_flex width=\"20%\" margin=\"0px 20px 0px 0px\">\n          <Button\n            bold\n            font\n            bg=\"black\"\n            color=\"#FFFFFF\"\n            margin=\"0px 5px\"\n            height=\"40px\"\n            radius=\"0.4rem\"\n            _onClick={() => {\n              history.push(\"/login\");\n            }}\n          >\n            로그인\n          </Button>\n          <Button\n            bold\n            font\n            bg=\"black\"\n            color=\"#FFFFFF\"\n            margin=\"0px 5px\"\n            height=\"40px\"\n            radius=\"0.4rem\"\n            _onClick={() => {\n              history.push(\"/signup\");\n            }}\n          >\n            회원가입\n          </Button>\n        </Grid>\n      </Grid>\n      <hr></hr>\n    </>\n  );\n};\nconst Image = styled.img`\n  width: 100px;\n  height: 100px;\n`;\nexport default Header;\n","import logo from \"../logo.svg\";\nimport \"./App.css\";\nimport { Route, Link } from \"react-router-dom\";\nimport React from \"react\";\nimport PostDetail from \"../pages/PostDetail\";\nimport PostEdit from \"../pages/PostEdit\";\nimport PostAdd from \"../pages/PostAdd\";\nimport PostList from \"../pages/PostList\";\nimport LogIn from \"../pages/LogIn\";\nimport SignUp from \"../pages/SignUp\";\nimport Header from \"../components/Header\";\n// 인덱스에 더 이상 브라우저라우터를 쓰지않고 provider를 써서 store주입 한다. (store에 createBrowsr history선언)\n// store에는\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { history } from \"../redux/configureStore\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\nfunction App() {\n  const dispatch = useDispatch();\n  dispatch(userActions.getUserDB());\n  return (\n    <React.Fragment>\n      <Header />\n      <ConnectedRouter history={history}>\n        <Route path=\"/login\" exact component={LogIn} />\n        <Route path=\"/signup\" exact component={SignUp} />\n        <Route path=\"/\" exact component={PostList} />\n        <Route path=\"/detail/:id\" exact component={PostDetail} />\n        <Route path=\"/detail/:id/edit\" exact component={PostEdit} />\n        <Route path=\"/addpost\" exact component={PostAdd} />\n      </ConnectedRouter>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./shared/App\";\nimport store from \"./redux/configureStore\";\nimport { Provider } from \"react-redux\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}